(*
    <vscr - Verilog converter to abc format.>
    Copyright (C) <2011,2012>  <Jonathan Richard Robert Kimmitt>

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
*)

open Elexer
open Edif2

let rec str_token (e:token) = match e with
| ID id -> "ID \""^id^"\""
| STRING str -> "STRING \""^str^"\""
| INT arg -> "INT "^(string_of_int arg)
| ILLEGAL arg -> "ILLEGAL "^(String.make 1 arg)
| TLIST lst -> "TLIST ["^String.concat ";" (List.map str_token lst)^"]"
| ITEM(kind, itm) -> "ITEM("^str_token kind^", "^str_token itm^")"
| ITEM2(kind, itm1, itm2) -> "ITEM2("^str_token kind^", "^str_token itm1^", "^str_token itm2^")"
| _ -> (Eord.getstr e)

exception End_of_File

let eparse arg =
  let inchan = open_in arg in
  let lexbuf = Lexing.from_channel inchan in
  try 
    Edif2.start Elexer.token lexbuf;
  with e ->
    for i = 1 to hsiz do
      let idx = (hsiz-i+(!histcnt))mod hsiz in
      let item = !(history.(idx)) in
      match item.tok with
        | EMPTY -> ()
        | STRING str -> Printf.printf "Backtrace %d : \"%s\" (%d-%d)\n"  i str item.strt item.stop
        | ID id -> Printf.printf "Backtrace %d : ID %s (%d-%d)\n"  i id item.strt item.stop
        | _ -> Printf.printf "Backtrace %d : %s (%d-%d)\n"  i (str_token (item.tok)) item.strt item.stop
    done;
    Edif2.EMPTY

let unhand_list = ref []
let unhand err = if not (List.mem err !unhand_list) then unhand_list := err :: !unhand_list

let array_dflt id str = Vparser.DOUBLE(Vparser.IDSTR id, Vparser.IDSTR str)
let cell_dflt id lst = Vparser.DOUBLE(Vparser.IDSTR id, Vparser.TLIST lst)
let cellref2_dflt id lst = Vparser.DOUBLE(Vparser.IDSTR id, Vparser.TLIST lst)
let rename_dflt arg1 arg2 = Vparser.DOUBLE(Vparser.IDSTR arg1, Vparser.IDSTR arg2)
let instance2_dflt instid cellid libid proplst = Vparser.QUADRUPLE(Vparser.IDSTR instid, Vparser.IDSTR cellid, Vparser.IDSTR libid, Vparser.TLIST proplst)
let netref_dflt oldid newid lst = Vparser.TRIPLE(Vparser.IDSTR oldid, Vparser.IDSTR newid, Vparser.TLIST lst)
let portref_dflt id ref = Vparser.DOUBLE(Vparser.IDSTR id, Vparser.IDSTR ref)
let portref2_dflt mref idx = Vparser.DOUBLE(Vparser.IDSTR mref, Vparser.INT idx)
let portref3_dflt mref idx instref = Vparser.TRIPLE(Vparser.IDSTR mref, Vparser.INT idx, Vparser.IDSTR instref)

let array_handler = ref array_dflt
let cell_handler = ref cell_dflt
let cellref2_handler = ref cellref2_dflt
let rename_handler = ref rename_dflt
let instance_handler2 = ref instance2_dflt
let netref_handler = ref netref_dflt
let portref_handler = ref portref_dflt
let portref2_handler = ref portref2_dflt
let portref3_handler = ref portref3_dflt

let report str = print_endline str; raise (Failure "failure")

let rec test_match container pattern: Vparser.token = match pattern with
  | ITEM2(Array, ITEM (Rename, TLIST [ID id; STRING str]), INT idx) -> (!array_handler) id str
  | ITEM2(Cellref, TLIST [ID id], TLIST lst) -> (!cellref2_handler) id (List.map (fun itm -> test_match pattern itm) lst)
  | ITEM2(Cell, TLIST [ID cellid], TLIST lst) -> (!cell_handler) cellid (List.map (fun itm -> test_match pattern itm) lst)
  | ITEM2(Contents, TLIST lst1, TLIST lst2) -> Vparser.DOUBLE (
    Vparser.TLIST (List.map (fun itm -> test_match pattern itm) lst1),
    Vparser.TLIST (List.map (fun itm -> test_match pattern itm) lst2))
  | ITEM2(Design, TLIST [ID id], TLIST lst) -> Vparser.TLIST (List.map (fun itm -> test_match pattern itm) lst)
  | ITEM2(Edif, TLIST [ID id], TLIST lst) -> Vparser.TLIST (List.map (fun itm -> test_match pattern itm) lst)
  | ITEM2(Instance, TLIST [ID instid], TLIST[ITEM2(Viewref, TLIST [ID netlist],
                                                  TLIST[ITEM(Cellref, TLIST [ID cellid])])]) ->
    (!instance_handler2) instid cellid "" []
  | ITEM2(Instance, TLIST [ID instid], TLIST[ITEM2(Viewref, TLIST [ID netlist],
                                                  TLIST[ITEM2(Cellref, TLIST [ID cellid],
                                                              TLIST [ITEM (Libraryref, TLIST [ID libid])])])]) ->
    (!instance_handler2) instid cellid libid []
  | ITEM2(Instance, TLIST [ID instid], 
                    TLIST (
		       ITEM2(Viewref, TLIST [ID netlist],
				      TLIST [ITEM2(Cellref, TLIST [ID cellid],
							    TLIST [ITEM(Libraryref, TLIST [ID libid])])]) ::
		       proplst)) ->  (!instance_handler2) instid cellid libid (List.map (test_match container) proplst)

  | ITEM2(Instance, TLIST [], 
                    TLIST (
                       ITEM(Rename, TLIST [ID instid;STRING str1]) ::
		       ITEM2(Viewref, TLIST [ID netlist],
				      TLIST [ITEM2(Cellref, TLIST [ID cellid],
							    TLIST [ITEM(Libraryref, TLIST [ID libid])])]) ::
		       proplst)) ->  (!instance_handler2) instid cellid libid (List.map (test_match container) proplst)

  | ITEM2(Interface, TLIST [], TLIST lst) -> Vparser.TLIST (List.map (fun itm -> test_match pattern itm) lst)
  | ITEM2(Joined, TLIST [], TLIST lst) -> Vparser.TLIST (List.map (fun itm -> test_match pattern itm) lst)
  | ITEM2(Keywordmap, TLIST lst1, TLIST lst2) -> Vparser.DOUBLE (
    Vparser.TLIST (List.map (fun itm -> test_match pattern itm) lst1),
    Vparser.TLIST (List.map (fun itm -> test_match pattern itm) lst2))
  | ITEM2(Library, TLIST [], TLIST lst) -> Vparser.TLIST (List.map (fun itm -> test_match pattern itm) lst)
  | ITEM2(Library, TLIST [ID libid], TLIST lst) -> Vparser.TLIST (List.map (fun itm -> test_match pattern itm) lst)
  | ITEM2(Net, TLIST [], TLIST [ITEM (Rename, TLIST [ID oldid; STRING newid]);
        ITEM2(Joined, TLIST [],
          TLIST portlst)]) -> (!netref_handler) oldid newid (List.map (fun itm -> test_match pattern itm) portlst)
  | ITEM2(Net, TLIST [ID netid], TLIST [ITEM2(Joined, TLIST [],
          TLIST portlst)]) -> (!netref_handler) netid netid (List.map (fun itm -> test_match pattern itm) portlst)
  | ITEM2(Net, _, _) -> unhand (pattern,container); report "net pattern"
  | ITEM2(Port, TLIST [], TLIST lst) -> Vparser.TLIST (List.map (fun itm -> test_match pattern itm) lst)
  | ITEM2(Port, TLIST [ID id], TLIST lst) -> Vparser.TLIST (List.map (fun itm -> test_match pattern itm) lst)
  | ITEM2(Portref, TLIST [ID id], TLIST [ITEM (Instanceref, TLIST [ID ref])]) -> (!portref_handler) id ref
  | ITEM2(Portref, TLIST [], TLIST [ITEM (Member, TLIST [ID mref; INT idx])]) -> (!portref2_handler) mref idx
  | ITEM2(Portref, TLIST [], TLIST[ITEM (Member, TLIST [ID mref; INT idx]); ITEM (Instanceref, TLIST [ID instref])]) ->
    (!portref3_handler) mref idx instref
  | ITEM2(Program, TLIST [STRING progid], TLIST lst) -> Vparser.TLIST (List.map (fun itm -> test_match pattern itm) lst)
  | ITEM2(Property, TLIST [ID part], TLIST lst) -> Vparser.TLIST (List.map (fun itm -> test_match pattern itm) lst)
  | ITEM2(Status, TLIST lst1, TLIST lst2) -> Vparser.DOUBLE (
    Vparser.TLIST (List.map (fun itm -> test_match pattern itm) lst1),
    Vparser.TLIST (List.map (fun itm -> test_match pattern itm) lst2));
  | ITEM2(Technology, TLIST lst1, TLIST lst2) -> Vparser.DOUBLE (
    Vparser.TLIST (List.map (fun itm -> test_match pattern itm) lst1),
    Vparser.TLIST (List.map (fun itm -> test_match pattern itm) lst2));
  | ITEM2(View, TLIST [ID netlist], TLIST lst) -> Vparser.TLIST (List.map (fun itm -> test_match pattern itm) lst)
  | ITEM2(Viewref, TLIST [ID "netlist"], TLIST lst) -> Vparser.TLIST (List.map (fun itm -> test_match pattern itm) lst)
  | ITEM2(Written, TLIST lst1, TLIST lst2) -> Vparser.DOUBLE (
    Vparser.TLIST (List.map (fun itm -> test_match pattern itm) lst1),
    Vparser.TLIST (List.map (fun itm -> test_match pattern itm) lst2));
  | ITEM2(External, TLIST lst1, TLIST lst2) -> Vparser.DOUBLE (
    Vparser.TLIST (List.map (function (ID itm) -> Vparser.IDSTR itm | itm -> test_match pattern itm) lst1),
    Vparser.TLIST (List.map (fun itm -> test_match pattern itm) lst2));
  | ITEM2(Boolean, TLIST lst1, TLIST lst2) -> Vparser.DOUBLE (
    Vparser.TLIST (List.map (function (ID itm) -> Vparser.IDSTR itm | itm -> test_match pattern itm) lst1),
    Vparser.TLIST (List.map (fun itm -> test_match pattern itm) lst2));
  | ITEM (Integer, TLIST [INT n]) -> Vparser.INT n
  | ITEM (Author, TLIST [STRING author]) -> Vparser.ASCNUM author
  | ITEM (Cellref, TLIST [ID id]) -> (!cellref2_handler) id []
  | ITEM (Celltype, TLIST [ID generic]) -> Vparser.IDSTR generic
  | ITEM (Direction, TLIST [ID dir]) -> Vparser.IDSTR dir
  | ITEM (Ediflevel, TLIST [INT n]) -> Vparser.INT n
  | ITEM (Edifversion, TLIST [INT n1; INT n2; INT n3]) -> Vparser.TRIPLE(Vparser.INT n1, Vparser.INT n2, Vparser.INT n3)
  | ITEM (Instanceref, TLIST [ID id]) -> failwith " ITEM (Instanceref, TLIST [ID id]) "
  | ITEM (Keywordlevel, TLIST [INT n]) -> Vparser.INT n
  | ITEM (Libraryref, TLIST [ID libref]) -> Vparser.IDSTR libref
  | ITEM (Member, TLIST [ID id; INT n]) -> failwith " ITEM (Member, TLIST [ID id; INT n]) "
  | ITEM (Numberdefinition, TLIST lst) -> Vparser.TLIST (List.map (fun itm -> test_match pattern itm) lst)
  | ITEM (Owner, TLIST [STRING xilinx]) -> Vparser.IDSTR xilinx
  | ITEM (Portref, TLIST [ID id]) -> (!portref_handler) id ""
  | ITEM (Rename, TLIST [ID id; STRING str]) -> (!rename_handler) id str
  | ITEM (String, TLIST [STRING str]) -> Vparser.IDSTR str
  | ITEM (String, TLIST lst) -> Vparser.TLIST (List.map (fun itm -> test_match pattern itm) lst)
  | ITEM (Timestamp, TLIST [INT yr; INT mon; INT day; INT hour; INT min; INT sec]) -> Vparser.SEXTUPLE(Vparser.INT yr, Vparser.INT mon, Vparser.INT day, Vparser.INT hour, Vparser.INT min, Vparser.INT sec)
  | ITEM (Version, TLIST [STRING str]) -> Vparser.IDSTR str
  | ITEM (Viewtype, TLIST [ID netlist]) -> Vparser.IDSTR netlist
  | ITEM (Designator, TLIST lst) -> Vparser.TLIST (List.map (function STRING str -> Vparser.IDSTR str | oth -> test_match pattern oth) lst);
  | ITEM(True, TLIST lst) -> Vparser.TLIST (List.map (fun itm -> test_match pattern itm) lst)
  | Abs -> report " Abs "
  | Acload -> report " Acload "
  | After -> report " After "
  | And -> report " And "
  | Annotate -> report " Annotate "
  | Apply -> report " Apply "
  | Arc -> report " Arc "
  | Array -> report " Array "
  | Arraymacro -> report " Arraymacro "
  | Arrayrelatedinfo -> report " Arrayrelatedinfo "
  | Arraysite -> report " Arraysite "
  | Assign -> report " Assign "
  | Atleast -> report " Atleast "
  | Atmost -> report " Atmost "
  | Author -> report " Author "
  | Basearray -> report " Basearray "
  | Becomes -> report " Becomes "
  | Between -> report " Between "
  | Block -> report " Block "
  | Boolean -> report " Boolean "
  | Booleandisplay -> report " Booleandisplay "
  | Booleanmap -> report " Booleanmap "
  | Booleanvalue -> report " Booleanvalue "
  | Borderpattern -> report " Borderpattern "
  | Borderwidth -> report " Borderwidth "
  | Boundingbox -> report " Boundingbox "
  | Ceiling -> report " Ceiling "
  | Cell -> report " Cell "
  | Cellref -> report " Cellref "
  | Celltype -> report " Celltype "
  | Change -> report " Change "
  | Circle -> report " Circle "
  | Color -> report " Color "
  | Comment -> report " Comment "
  | Commentgraphics -> report " Commentgraphics "
  | Compound -> report " Compound "
  | Concat -> report " Concat "
  | Connectlocation -> report " Connectlocation "
  | Constant -> report " Constant "
  | Constraint -> report " Constraint "
  | Contents -> report " Contents "
  | Cornertype -> report " Cornertype "
  | Criticality -> report " Criticality "
  | Currentmap -> report " Currentmap "
  | Curve -> report " Curve "
  | Cycle -> report " Cycle "
  | Dataorigin -> report " Dataorigin "
  | Dcfaninload -> report " Dcfaninload "
  | Dcfanoutload -> report " Dcfanoutload "
  | Dcmaxfanin -> report " Dcmaxfanin "
  | Dcmaxfanout -> report " Dcmaxfanout "
  | Delay -> report " Delay "
  | Delta -> report " Delta "
  | Derivation -> report " Derivation "
  | Design -> report " Design "
  | Designator -> report " Designator "
  | Difference -> report " Difference "
  | Direction -> report " Direction "
  | Display -> report " Display "
  | Divide -> report " Divide "
  | Dominates -> report " Dominates "
  | Dot -> report " Dot "
  | Duration -> report " Duration "
  | E -> report " E "
  | Edif -> report " Edif "
  | Ediflevel -> report " Ediflevel "
  | Edifversion -> report " Edifversion "
  | Else -> report " Else "
  | Enclosuredistance -> report " Enclosuredistance "
  | Endtype -> report " Endtype "
  | Entry -> report " Entry "
  | Equal -> report " Equal "
  | Escape -> report " Escape "
  | Event -> report " Event "
  | Exactly -> report " Exactly "
  | External -> report " External "
  | Fabricate -> report " Fabricate "
  | False -> report " False "
  | Figure -> report " Figure "
  | Figurearea -> report " Figurearea "
  | Figuregroup -> report " Figuregroup "
  | Figuregroupobject -> report " Figuregroupobject "
  | Figuregroupoverride -> report " Figuregroupoverride "
  | Figuregroupref -> report " Figuregroupref "
  | Figureperimeter -> report " Figureperimeter "
  | Figurewidth -> report " Figurewidth "
  | Fillpattern -> report " Fillpattern "
  | Fix -> report " Fix "
  | Floor -> report " Floor "
  | Follow -> report " Follow "
  | Forbiddenevent -> report " Forbiddenevent "
  | Form -> report " Form "
  | Globalportref -> report " Globalportref "
  | Greaterthan -> report " Greaterthan "
  | Gridmap -> report " Gridmap "
  | If -> report " If "
  | Ignore -> report " Ignore "
  | Includefiguregroup -> report " Includefiguregroup "
  | Increasing -> report " Increasing "
  | Initial -> report " Initial "
  | Instance -> report " Instance "
  | Instancebackannotate -> report " Instancebackannotate "
  | Instancegroup -> report " Instancegroup "
  | Instancemap -> report " Instancemap "
  | Instancenamedef -> report " Instancenamedef "
  | Instanceref -> report " Instanceref "
  | Integer -> report " Integer "
  | Integerdisplay -> report " Integerdisplay "
  | Interface -> report " Interface "
  | Interfiguregroupspacing -> report " Interfiguregroupspacing "
  | Intersection -> report " Intersection "
  | Intrafiguregroupspacing -> report " Intrafiguregroupspacing "
  | Inverse -> report " Inverse "
  | Isolated -> report " Isolated "
  | Iterate -> report " Iterate "
  | Joined -> report " Joined "
  | Justify -> report " Justify "
  | Keyworddisplay -> report " Keyworddisplay "
  | Keywordlevel -> report " Keywordlevel "
  | Keywordmap -> report " Keywordmap "
  | Lessthan -> report " Lessthan "
  | Library -> report " Library "
  | Libraryref -> report " Libraryref "
  | Listofnets -> report " Listofnets "
  | Listofports -> report " Listofports "
  | Loaddelay -> report " Loaddelay "
  | Logicassign -> report " Logicassign "
  | Logicinput -> report " Logicinput "
  | Logiclist -> report " Logiclist "
  | Logicmapinput -> report " Logicmapinput "
  | Logicmapoutput -> report " Logicmapoutput "
  | Logiconeof -> report " Logiconeof "
  | Logicoutput -> report " Logicoutput "
  | Logicport -> report " Logicport "
  | Logicref -> report " Logicref "
  | Logicvalue -> report " Logicvalue "
  | Logicwaveform -> report " Logicwaveform "
  | Maintain -> report " Maintain "
  | Match -> report " Match "
  | Max -> report " Max "
  | Member -> report " Member "
  | Min -> report " Min "
  | Minomax -> report " Minomax "
  | Minomaxdisplay -> report " Minomaxdisplay "
  | Mnm -> report " Mnm "
  | Mod -> report " Mod "
  | Multiplevalueset -> report " Multiplevalueset "
  | Mustjoin -> report " Mustjoin "
  | Name -> report " Name "
  | Negate -> report " Negate "
  | Net -> report " Net "
  | Netbackannotate -> report " Netbackannotate "
  | Netbundle -> report " Netbundle "
  | Netdelay -> report " Netdelay "
  | Netgroup -> report " Netgroup "
  | Netmap -> report " Netmap "
  | Netref -> report " Netref "
  | Nochange -> report " Nochange "
  | Nonpermutable -> report " Nonpermutable "
  | Not -> report " Not "
  | Notallowed -> report " Notallowed "
  | Notchspacing -> report " Notchspacing "
  | Number -> report " Number "
  | Numberdefinition -> report " Numberdefinition "
  | Numberdisplay -> report " Numberdisplay "
  | Offpageconnector -> report " Offpageconnector "
  | Offsetevent -> report " Offsetevent "
  | Openshape -> report " Openshape "
  | Or -> report " Or "
  | Orientation -> report " Orientation "
  | Origin -> report " Origin "
  | Overhangdistance -> report " Overhangdistance "
  | Overlapdistance -> report " Overlapdistance "
  | Oversize -> report " Oversize "
  | Owner -> report " Owner "
  | Page -> report " Page "
  | Pagesize -> report " Pagesize "
  | Parameter -> report " Parameter "
  | Parameterassign -> report " Parameterassign "
  | Parameterdisplay -> report " Parameterdisplay "
  | Path -> report " Path "
  | Pathdelay -> report " Pathdelay "
  | Pathwidth -> report " Pathwidth "
  | Permutable -> report " Permutable "
  | Physicaldesignrule -> report " Physicaldesignrule "
  | Plug -> report " Plug "
  | Point -> report " Point "
  | Pointdisplay -> report " Pointdisplay "
  | Pointlist -> report " Pointlist "
  | Pointsubtract -> report " Pointsubtract "
  | Pointsum -> report " Pointsum "
  | Polygon -> report " Polygon "
  | Port -> report " Port "
  | Portbackannotate -> report " Portbackannotate "
  | Portbundle -> report " Portbundle "
  | Portdelay -> report " Portdelay "
  | Portgroup -> report " Portgroup "
  | Portimplementation -> report " Portimplementation "
  | Portinstance -> report " Portinstance "
  | Portlist -> report " Portlist "
  | Portlistalias -> report " Portlistalias "
  | Portmap -> report " Portmap "
  | Portref -> report " Portref "
  | Product -> report " Product "
  | Program -> report " Program "
  | Property -> report " Property "
  | Propertydisplay -> report " Propertydisplay "
  | Protectionframe -> report " Protectionframe "
  | Pt -> report " Pt "
  | Rangevector -> report " Rangevector "
  | Rectangle -> report " Rectangle "
  | Rectanglesize -> report " Rectanglesize "
  | Rename -> report " Rename "
  | Resolves -> report " Resolves "
  | Scale -> report " Scale "
  | Scalex -> report " Scalex "
  | Scaley -> report " Scaley "
  | Section -> report " Section "
  | Shape -> report " Shape "
  | Simulate -> report " Simulate "
  | Simulationinfo -> report " Simulationinfo "
  | Singlevalueset -> report " Singlevalueset "
  | Site -> report " Site "
  | Socket -> report " Socket "
  | Socketset -> report " Socketset "
  | Statement -> report " Statement "
  | Status -> report " Status "
  | Steady -> report " Steady "
  | Strictlyincreasing -> report " Strictlyincreasing "
  | String -> report " String "
  | Stringdisplay -> report " Stringdisplay "
  | Strong -> report " Strong "
  | Subtract -> report " Subtract "
  | Sum -> report " Sum "
  | Symbol -> report " Symbol "
  | Symmetry -> report " Symmetry "
  | Table -> report " Table "
  | Tabledefault -> report " Tabledefault "
  | Technology -> report " Technology "
  | Textheight -> report " Textheight "
  | Then -> report " Then "
  | Timeinterval -> report " Timeinterval "
  | Timestamp -> report " Timestamp "
  | Timing -> report " Timing "
  | Transform -> report " Transform "
  | Transition -> report " Transition "
  | Trigger -> report " Trigger "
  | True -> report " True "
  | Typedvalue -> report " Typedvalue "
  | Unconstrained -> report " Unconstrained "
  | Undefined -> report " Undefined "
  | Union -> report " Union "
  | Unit -> report " Unit "
  | Unused -> report " Unused "
  | Userdata -> report " Userdata "
  | Valuenameref -> report " Valuenameref "
  | Variable -> report " Variable "
  | Version -> report " Version "
  | View -> report " View "
  | Viewlist -> report " Viewlist "
  | Viewmap -> report " Viewmap "
  | Viewref -> report " Viewref "
  | Viewtype -> report " Viewtype "
  | Visible -> report " Visible "
  | Voltagemap -> report " Voltagemap "
  | Wavevalue -> report " Wavevalue "
  | Weak -> report " Weak "
  | Weakjoined -> report " Weakjoined "
  | When -> report " When "
  | While -> report " While "
  | Written -> report " Written "
  | Xcoord -> report " Xcoord "
  | Xor -> report " Xor "
  | Ycoord -> report " Ycoord "
  | ILLEGAL _ -> report " ILLEGAL _ "
  | ID _ -> report " ID _ "
  | TLIST _ -> report " TLIST _ "
  | TLIST2 _ -> report " TLIST2 _ "
  | STRING _ -> report " STRING _ "
  | INT _ -> report " INT _ "
  | ENDOFFILE -> report " ENDOFFILE "
  | EOL -> report " EOL "
  | LPAREN -> report " LPAREN "
  | RPAREN -> report " RPAREN "
  | EMPTY -> report " EMPTY "

  | ITEM2(Abs, _, _) -> report " ITEM2(Abs, _, _) "
  | ITEM2(Acload, _, _) -> report " ITEM2(Acload, _, _) "
  | ITEM2(After, _, _) -> report " ITEM2(After, _, _) "
  | ITEM2(And, _, _) -> report " ITEM2(And, _, _) "
  | ITEM2(Annotate, _, _) -> report " ITEM2(Annotate, _, _) "
  | ITEM2(Apply, _, _) -> report " ITEM2(Apply, _, _) "
  | ITEM2(Arc, _, _) -> report " ITEM2(Arc, _, _) "
  | ITEM2(Array, _, _) -> report " ITEM2(Array, _, _) "
  | ITEM2(Arraymacro, _, _) -> report " ITEM2(Arraymacro, _, _) "
  | ITEM2(Arrayrelatedinfo, _, _) -> report " ITEM2(Arrayrelatedinfo, _, _) "
  | ITEM2(Arraysite, _, _) -> report " ITEM2(Arraysite, _, _) "
  | ITEM2(Assign, _, _) -> report " ITEM2(Assign, _, _) "
  | ITEM2(Atleast, _, _) -> report " ITEM2(Atleast, _, _) "
  | ITEM2(Atmost, _, _) -> report " ITEM2(Atmost, _, _) "
  | ITEM2(Author, _, _) -> report " ITEM2(Author, _, _) "
  | ITEM2(Basearray, _, _) -> report " ITEM2(Basearray, _, _) "
  | ITEM2(Becomes, _, _) -> report " ITEM2(Becomes, _, _) "
  | ITEM2(Between, _, _) -> report " ITEM2(Between, _, _) "
  | ITEM2(Block, _, _) -> report " ITEM2(Block, _, _) "
  | ITEM2(Boolean, _, _) -> report " ITEM2(Boolean, _, _) "
  | ITEM2(Booleandisplay, _, _) -> report " ITEM2(Booleandisplay, _, _) "
  | ITEM2(Booleanmap, _, _) -> report " ITEM2(Booleanmap, _, _) "
  | ITEM2(Booleanvalue, _, _) -> report " ITEM2(Booleanvalue, _, _) "
  | ITEM2(Borderpattern, _, _) -> report " ITEM2(Borderpattern, _, _) "
  | ITEM2(Borderwidth, _, _) -> report " ITEM2(Borderwidth, _, _) "
  | ITEM2(Boundingbox, _, _) -> report " ITEM2(Boundingbox, _, _) "
  | ITEM2(Ceiling, _, _) -> report " ITEM2(Ceiling, _, _) "
  | ITEM2(Cell, _, _) -> report " ITEM2(Cell, _, _) "
  | ITEM2(Cellref, _, _) -> report " ITEM2(Cellref, _, _) "
  | ITEM2(Celltype, _, _) -> report " ITEM2(Celltype, _, _) "
  | ITEM2(Change, _, _) -> report " ITEM2(Change, _, _) "
  | ITEM2(Circle, _, _) -> report " ITEM2(Circle, _, _) "
  | ITEM2(Color, _, _) -> report " ITEM2(Color, _, _) "
  | ITEM2(Comment, _, _) -> report " ITEM2(Comment, _, _) "
  | ITEM2(Commentgraphics, _, _) -> report " ITEM2(Commentgraphics, _, _) "
  | ITEM2(Compound, _, _) -> report " ITEM2(Compound, _, _) "
  | ITEM2(Concat, _, _) -> report " ITEM2(Concat, _, _) "
  | ITEM2(Connectlocation, _, _) -> report " ITEM2(Connectlocation, _, _) "
  | ITEM2(Constant, _, _) -> report " ITEM2(Constant, _, _) "
  | ITEM2(Constraint, _, _) -> report " ITEM2(Constraint, _, _) "
  | ITEM2(Contents, _, _) -> report " ITEM2(Contents, _, _) "
  | ITEM2(Cornertype, _, _) -> report " ITEM2(Cornertype, _, _) "
  | ITEM2(Criticality, _, _) -> report " ITEM2(Criticality, _, _) "
  | ITEM2(Currentmap, _, _) -> report " ITEM2(Currentmap, _, _) "
  | ITEM2(Curve, _, _) -> report " ITEM2(Curve, _, _) "
  | ITEM2(Cycle, _, _) -> report " ITEM2(Cycle, _, _) "
  | ITEM2(Dataorigin, _, _) -> report " ITEM2(Dataorigin, _, _) "
  | ITEM2(Dcfaninload, _, _) -> report " ITEM2(Dcfaninload, _, _) "
  | ITEM2(Dcfanoutload, _, _) -> report " ITEM2(Dcfanoutload, _, _) "
  | ITEM2(Dcmaxfanin, _, _) -> report " ITEM2(Dcmaxfanin, _, _) "
  | ITEM2(Dcmaxfanout, _, _) -> report " ITEM2(Dcmaxfanout, _, _) "
  | ITEM2(Delay, _, _) -> report " ITEM2(Delay, _, _) "
  | ITEM2(Delta, _, _) -> report " ITEM2(Delta, _, _) "
  | ITEM2(Derivation, _, _) -> report " ITEM2(Derivation, _, _) "
  | ITEM2(Design, _, _) -> report " ITEM2(Design, _, _) "
  | ITEM2(Designator, _, _) -> report " ITEM2(Designator, _, _) "
  | ITEM2(Difference, _, _) -> report " ITEM2(Difference, _, _) "
  | ITEM2(Direction, _, _) -> report " ITEM2(Direction, _, _) "
  | ITEM2(Display, _, _) -> report " ITEM2(Display, _, _) "
  | ITEM2(Divide, _, _) -> report " ITEM2(Divide, _, _) "
  | ITEM2(Dominates, _, _) -> report " ITEM2(Dominates, _, _) "
  | ITEM2(Dot, _, _) -> report " ITEM2(Dot, _, _) "
  | ITEM2(Duration, _, _) -> report " ITEM2(Duration, _, _) "
  | ITEM2(E, _, _) -> report " ITEM2(E, _, _) "
  | ITEM2(Edif, _, _) -> report " ITEM2(Edif, _, _) "
  | ITEM2(Ediflevel, _, _) -> report " ITEM2(Ediflevel, _, _) "
  | ITEM2(Edifversion, _, _) -> report " ITEM2(Edifversion, _, _) "
  | ITEM2(Else, _, _) -> report " ITEM2(Else, _, _) "
  | ITEM2(Enclosuredistance, _, _) -> report " ITEM2(Enclosuredistance, _, _) "
  | ITEM2(Endtype, _, _) -> report " ITEM2(Endtype, _, _) "
  | ITEM2(Entry, _, _) -> report " ITEM2(Entry, _, _) "
  | ITEM2(Equal, _, _) -> report " ITEM2(Equal, _, _) "
  | ITEM2(Escape, _, _) -> report " ITEM2(Escape, _, _) "
  | ITEM2(Event, _, _) -> report " ITEM2(Event, _, _) "
  | ITEM2(Exactly, _, _) -> report " ITEM2(Exactly, _, _) "
  | ITEM2(External, _, _) -> report " ITEM2(External, _, _) "
  | ITEM2(Fabricate, _, _) -> report " ITEM2(Fabricate, _, _) "
  | ITEM2(False, _, _) -> report " ITEM2(False, _, _) "
  | ITEM2(Figure, _, _) -> report " ITEM2(Figure, _, _) "
  | ITEM2(Figurearea, _, _) -> report " ITEM2(Figurearea, _, _) "
  | ITEM2(Figuregroup, _, _) -> report " ITEM2(Figuregroup, _, _) "
  | ITEM2(Figuregroupobject, _, _) -> report " ITEM2(Figuregroupobject, _, _) "
  | ITEM2(Figuregroupoverride, _, _) -> report " ITEM2(Figuregroupoverride, _, _) "
  | ITEM2(Figuregroupref, _, _) -> report " ITEM2(Figuregroupref, _, _) "
  | ITEM2(Figureperimeter, _, _) -> report " ITEM2(Figureperimeter, _, _) "
  | ITEM2(Figurewidth, _, _) -> report " ITEM2(Figurewidth, _, _) "
  | ITEM2(Fillpattern, _, _) -> report " ITEM2(Fillpattern, _, _) "
  | ITEM2(Fix, _, _) -> report " ITEM2(Fix, _, _) "
  | ITEM2(Floor, _, _) -> report " ITEM2(Floor, _, _) "
  | ITEM2(Follow, _, _) -> report " ITEM2(Follow, _, _) "
  | ITEM2(Forbiddenevent, _, _) -> report " ITEM2(Forbiddenevent, _, _) "
  | ITEM2(Form, _, _) -> report " ITEM2(Form, _, _) "
  | ITEM2(Globalportref, _, _) -> report " ITEM2(Globalportref, _, _) "
  | ITEM2(Greaterthan, _, _) -> report " ITEM2(Greaterthan, _, _) "
  | ITEM2(Gridmap, _, _) -> report " ITEM2(Gridmap, _, _) "
  | ITEM2(If, _, _) -> report " ITEM2(If, _, _) "
  | ITEM2(Ignore, _, _) -> report " ITEM2(Ignore, _, _) "
  | ITEM2(Includefiguregroup, _, _) -> report " ITEM2(Includefiguregroup, _, _) "
  | ITEM2(Increasing, _, _) -> report " ITEM2(Increasing, _, _) "
  | ITEM2(Initial, _, _) -> report " ITEM2(Initial, _, _) "
  | ITEM2(Instance, arg1, arg2) -> report (" ITEM2(Instance, "^str_token arg1^", "^str_token arg2^") ")
  | ITEM2(Instancebackannotate, _, _) -> report " ITEM2(Instancebackannotate, _, _) "
  | ITEM2(Instancegroup, _, _) -> report " ITEM2(Instancegroup, _, _) "
  | ITEM2(Instancemap, _, _) -> report " ITEM2(Instancemap, _, _) "
  | ITEM2(Instancenamedef, _, _) -> report " ITEM2(Instancenamedef, _, _) "
  | ITEM2(Instanceref, _, _) -> report " ITEM2(Instanceref, _, _) "
  | ITEM2(Integer, _, _) -> report " ITEM2(Integer, _, _) "
  | ITEM2(Integerdisplay, _, _) -> report " ITEM2(Integerdisplay, _, _) "
  | ITEM2(Interface, _, _) -> report " ITEM2(Interface, _, _) "
  | ITEM2(Interfiguregroupspacing, _, _) -> report " ITEM2(Interfiguregroupspacing, _, _) "
  | ITEM2(Intersection, _, _) -> report " ITEM2(Intersection, _, _) "
  | ITEM2(Intrafiguregroupspacing, _, _) -> report " ITEM2(Intrafiguregroupspacing, _, _) "
  | ITEM2(Inverse, _, _) -> report " ITEM2(Inverse, _, _) "
  | ITEM2(Isolated, _, _) -> report " ITEM2(Isolated, _, _) "
  | ITEM2(Iterate, _, _) -> report " ITEM2(Iterate, _, _) "
  | ITEM2(Joined, _, _) -> report " ITEM2(Joined, _, _) "
  | ITEM2(Justify, _, _) -> report " ITEM2(Justify, _, _) "
  | ITEM2(Keyworddisplay, _, _) -> report " ITEM2(Keyworddisplay, _, _) "
  | ITEM2(Keywordlevel, _, _) -> report " ITEM2(Keywordlevel, _, _) "
  | ITEM2(Keywordmap, _, _) -> report " ITEM2(Keywordmap, _, _) "
  | ITEM2(Lessthan, _, _) -> report " ITEM2(Lessthan, _, _) "
  | ITEM2(Library, _, _) -> report " ITEM2(Library, _, _) "
  | ITEM2(Libraryref, _, _) -> report " ITEM2(Libraryref, _, _) "
  | ITEM2(Listofnets, _, _) -> report " ITEM2(Listofnets, _, _) "
  | ITEM2(Listofports, _, _) -> report " ITEM2(Listofports, _, _) "
  | ITEM2(Loaddelay, _, _) -> report " ITEM2(Loaddelay, _, _) "
  | ITEM2(Logicassign, _, _) -> report " ITEM2(Logicassign, _, _) "
  | ITEM2(Logicinput, _, _) -> report " ITEM2(Logicinput, _, _) "
  | ITEM2(Logiclist, _, _) -> report " ITEM2(Logiclist, _, _) "
  | ITEM2(Logicmapinput, _, _) -> report " ITEM2(Logicmapinput, _, _) "
  | ITEM2(Logicmapoutput, _, _) -> report " ITEM2(Logicmapoutput, _, _) "
  | ITEM2(Logiconeof, _, _) -> report " ITEM2(Logiconeof, _, _) "
  | ITEM2(Logicoutput, _, _) -> report " ITEM2(Logicoutput, _, _) "
  | ITEM2(Logicport, _, _) -> report " ITEM2(Logicport, _, _) "
  | ITEM2(Logicref, _, _) -> report " ITEM2(Logicref, _, _) "
  | ITEM2(Logicvalue, _, _) -> report " ITEM2(Logicvalue, _, _) "
  | ITEM2(Logicwaveform, _, _) -> report " ITEM2(Logicwaveform, _, _) "
  | ITEM2(Maintain, _, _) -> report " ITEM2(Maintain, _, _) "
  | ITEM2(Match, _, _) -> report " ITEM2(Match, _, _) "
  | ITEM2(Max, _, _) -> report " ITEM2(Max, _, _) "
  | ITEM2(Member, _, _) -> report " ITEM2(Member, _, _) "
  | ITEM2(Min, _, _) -> report " ITEM2(Min, _, _) "
  | ITEM2(Minomax, _, _) -> report " ITEM2(Minomax, _, _) "
  | ITEM2(Minomaxdisplay, _, _) -> report " ITEM2(Minomaxdisplay, _, _) "
  | ITEM2(Mnm, _, _) -> report " ITEM2(Mnm, _, _) "
  | ITEM2(Mod, _, _) -> report " ITEM2(Mod, _, _) "
  | ITEM2(Multiplevalueset, _, _) -> report " ITEM2(Multiplevalueset, _, _) "
  | ITEM2(Mustjoin, _, _) -> report " ITEM2(Mustjoin, _, _) "
  | ITEM2(Name, _, _) -> report " ITEM2(Name, _, _) "
  | ITEM2(Negate, _, _) -> report " ITEM2(Negate, _, _) "
(*
  | ITEM2(Net, _, _) -> report " ITEM2(Net, _, _) "
*)
  | ITEM2(Netbackannotate, _, _) -> report " ITEM2(Netbackannotate, _, _) "
  | ITEM2(Netbundle, _, _) -> report " ITEM2(Netbundle, _, _) "
  | ITEM2(Netdelay, _, _) -> report " ITEM2(Netdelay, _, _) "
  | ITEM2(Netgroup, _, _) -> report " ITEM2(Netgroup, _, _) "
  | ITEM2(Netmap, _, _) -> report " ITEM2(Netmap, _, _) "
  | ITEM2(Netref, _, _) -> report " ITEM2(Netref, _, _) "
  | ITEM2(Nochange, _, _) -> report " ITEM2(Nochange, _, _) "
  | ITEM2(Nonpermutable, _, _) -> report " ITEM2(Nonpermutable, _, _) "
  | ITEM2(Not, _, _) -> report " ITEM2(Not, _, _) "
  | ITEM2(Notallowed, _, _) -> report " ITEM2(Notallowed, _, _) "
  | ITEM2(Notchspacing, _, _) -> report " ITEM2(Notchspacing, _, _) "
  | ITEM2(Number, _, _) -> report " ITEM2(Number, _, _) "
  | ITEM2(Numberdefinition, _, _) -> report " ITEM2(Numberdefinition, _, _) "
  | ITEM2(Numberdisplay, _, _) -> report " ITEM2(Numberdisplay, _, _) "
  | ITEM2(Offpageconnector, _, _) -> report " ITEM2(Offpageconnector, _, _) "
  | ITEM2(Offsetevent, _, _) -> report " ITEM2(Offsetevent, _, _) "
  | ITEM2(Openshape, _, _) -> report " ITEM2(Openshape, _, _) "
  | ITEM2(Or, _, _) -> report " ITEM2(Or, _, _) "
  | ITEM2(Orientation, _, _) -> report " ITEM2(Orientation, _, _) "
  | ITEM2(Origin, _, _) -> report " ITEM2(Origin, _, _) "
  | ITEM2(Overhangdistance, _, _) -> report " ITEM2(Overhangdistance, _, _) "
  | ITEM2(Overlapdistance, _, _) -> report " ITEM2(Overlapdistance, _, _) "
  | ITEM2(Oversize, _, _) -> report " ITEM2(Oversize, _, _) "
  | ITEM2(Owner, _, _) -> report " ITEM2(Owner, _, _) "
  | ITEM2(Page, _, _) -> report " ITEM2(Page, _, _) "
  | ITEM2(Pagesize, _, _) -> report " ITEM2(Pagesize, _, _) "
  | ITEM2(Parameter, _, _) -> report " ITEM2(Parameter, _, _) "
  | ITEM2(Parameterassign, _, _) -> report " ITEM2(Parameterassign, _, _) "
  | ITEM2(Parameterdisplay, _, _) -> report " ITEM2(Parameterdisplay, _, _) "
  | ITEM2(Path, _, _) -> report " ITEM2(Path, _, _) "
  | ITEM2(Pathdelay, _, _) -> report " ITEM2(Pathdelay, _, _) "
  | ITEM2(Pathwidth, _, _) -> report " ITEM2(Pathwidth, _, _) "
  | ITEM2(Permutable, _, _) -> report " ITEM2(Permutable, _, _) "
  | ITEM2(Physicaldesignrule, _, _) -> report " ITEM2(Physicaldesignrule, _, _) "
  | ITEM2(Plug, _, _) -> report " ITEM2(Plug, _, _) "
  | ITEM2(Point, _, _) -> report " ITEM2(Point, _, _) "
  | ITEM2(Pointdisplay, _, _) -> report " ITEM2(Pointdisplay, _, _) "
  | ITEM2(Pointlist, _, _) -> report " ITEM2(Pointlist, _, _) "
  | ITEM2(Pointsubtract, _, _) -> report " ITEM2(Pointsubtract, _, _) "
  | ITEM2(Pointsum, _, _) -> report " ITEM2(Pointsum, _, _) "
  | ITEM2(Polygon, _, _) -> report " ITEM2(Polygon, _, _) "
  | ITEM2(Port, _, _) -> report " ITEM2(Port, _, _) "
  | ITEM2(Portbackannotate, _, _) -> report " ITEM2(Portbackannotate, _, _) "
  | ITEM2(Portbundle, _, _) -> report " ITEM2(Portbundle, _, _) "
  | ITEM2(Portdelay, _, _) -> report " ITEM2(Portdelay, _, _) "
  | ITEM2(Portgroup, _, _) -> report " ITEM2(Portgroup, _, _) "
  | ITEM2(Portimplementation, _, _) -> report " ITEM2(Portimplementation, _, _) "
  | ITEM2(Portinstance, _, _) -> report " ITEM2(Portinstance, _, _) "
  | ITEM2(Portlist, _, _) -> report " ITEM2(Portlist, _, _) "
  | ITEM2(Portlistalias, _, _) -> report " ITEM2(Portlistalias, _, _) "
  | ITEM2(Portmap, _, _) -> report " ITEM2(Portmap, _, _) "
  | ITEM2(Portref, _, _) -> report " ITEM2(Portref, _, _) "
  | ITEM2(Product, _, _) -> report " ITEM2(Product, _, _) "
  | ITEM2(Program, _, _) -> report " ITEM2(Program, _, _) "
  | ITEM2(Property, _, _) -> report " ITEM2(Property, _, _) "
  | ITEM2(Propertydisplay, _, _) -> report " ITEM2(Propertydisplay, _, _) "
  | ITEM2(Protectionframe, _, _) -> report " ITEM2(Protectionframe, _, _) "
  | ITEM2(Pt, _, _) -> report " ITEM2(Pt, _, _) "
  | ITEM2(Rangevector, _, _) -> report " ITEM2(Rangevector, _, _) "
  | ITEM2(Rectangle, _, _) -> report " ITEM2(Rectangle, _, _) "
  | ITEM2(Rectanglesize, _, _) -> report " ITEM2(Rectanglesize, _, _) "
  | ITEM2(Rename, _, _) -> report " ITEM2(Rename, _, _) "
  | ITEM2(Resolves, _, _) -> report " ITEM2(Resolves, _, _) "
  | ITEM2(Scale, _, _) -> report " ITEM2(Scale, _, _) "
  | ITEM2(Scalex, _, _) -> report " ITEM2(Scalex, _, _) "
  | ITEM2(Scaley, _, _) -> report " ITEM2(Scaley, _, _) "
  | ITEM2(Section, _, _) -> report " ITEM2(Section, _, _) "
  | ITEM2(Shape, _, _) -> report " ITEM2(Shape, _, _) "
  | ITEM2(Simulate, _, _) -> report " ITEM2(Simulate, _, _) "
  | ITEM2(Simulationinfo, _, _) -> report " ITEM2(Simulationinfo, _, _) "
  | ITEM2(Singlevalueset, _, _) -> report " ITEM2(Singlevalueset, _, _) "
  | ITEM2(Site, _, _) -> report " ITEM2(Site, _, _) "
  | ITEM2(Socket, _, _) -> report " ITEM2(Socket, _, _) "
  | ITEM2(Socketset, _, _) -> report " ITEM2(Socketset, _, _) "
  | ITEM2(Statement, _, _) -> report " ITEM2(Statement, _, _) "
  | ITEM2(Status, _, _) -> report " ITEM2(Status, _, _) "
  | ITEM2(Steady, _, _) -> report " ITEM2(Steady, _, _) "
  | ITEM2(Strictlyincreasing, _, _) -> report " ITEM2(Strictlyincreasing, _, _) "
  | ITEM2(String, _, _) -> report " ITEM2(String, _, _) "
  | ITEM2(Stringdisplay, _, _) -> report " ITEM2(Stringdisplay, _, _) "
  | ITEM2(Strong, _, _) -> report " ITEM2(Strong, _, _) "
  | ITEM2(Subtract, _, _) -> report " ITEM2(Subtract, _, _) "
  | ITEM2(Sum, _, _) -> report " ITEM2(Sum, _, _) "
  | ITEM2(Symbol, _, _) -> report " ITEM2(Symbol, _, _) "
  | ITEM2(Symmetry, _, _) -> report " ITEM2(Symmetry, _, _) "
  | ITEM2(Table, _, _) -> report " ITEM2(Table, _, _) "
  | ITEM2(Tabledefault, _, _) -> report " ITEM2(Tabledefault, _, _) "
  | ITEM2(Technology, _, _) -> report " ITEM2(Technology, _, _) "
  | ITEM2(Textheight, _, _) -> report " ITEM2(Textheight, _, _) "
  | ITEM2(Then, _, _) -> report " ITEM2(Then, _, _) "
  | ITEM2(Timeinterval, _, _) -> report " ITEM2(Timeinterval, _, _) "
  | ITEM2(Timestamp, _, _) -> report " ITEM2(Timestamp, _, _) "
  | ITEM2(Timing, _, _) -> report " ITEM2(Timing, _, _) "
  | ITEM2(Transform, _, _) -> report " ITEM2(Transform, _, _) "
  | ITEM2(Transition, _, _) -> report " ITEM2(Transition, _, _) "
  | ITEM2(Trigger, _, _) -> report " ITEM2(Trigger, _, _) "
  | ITEM2(True, _, _) -> report " ITEM2(True, _, _) "
  | ITEM2(Typedvalue, _, _) -> report " ITEM2(Typedvalue, _, _) "
  | ITEM2(Unconstrained, _, _) -> report " ITEM2(Unconstrained, _, _) "
  | ITEM2(Undefined, _, _) -> report " ITEM2(Undefined, _, _) "
  | ITEM2(Union, _, _) -> report " ITEM2(Union, _, _) "
  | ITEM2(Unit, _, _) -> report " ITEM2(Unit, _, _) "
  | ITEM2(Unused, _, _) -> report " ITEM2(Unused, _, _) "
  | ITEM2(Userdata, _, _) -> report " ITEM2(Userdata, _, _) "
  | ITEM2(Valuenameref, _, _) -> report " ITEM2(Valuenameref, _, _) "
  | ITEM2(Variable, _, _) -> report " ITEM2(Variable, _, _) "
  | ITEM2(Version, _, _) -> report " ITEM2(Version, _, _) "
  | ITEM2(View, _, _) -> report " ITEM2(View, _, _) "
  | ITEM2(Viewlist, _, _) -> report " ITEM2(Viewlist, _, _) "
  | ITEM2(Viewmap, _, _) -> report " ITEM2(Viewmap, _, _) "
  | ITEM2(Viewref, _, _) -> report " ITEM2(Viewref, _, _) "
  | ITEM2(Viewtype, _, _) -> report " ITEM2(Viewtype, _, _) "
  | ITEM2(Visible, _, _) -> report " ITEM2(Visible, _, _) "
  | ITEM2(Voltagemap, _, _) -> report " ITEM2(Voltagemap, _, _) "
  | ITEM2(Wavevalue, _, _) -> report " ITEM2(Wavevalue, _, _) "
  | ITEM2(Weak, _, _) -> report " ITEM2(Weak, _, _) "
  | ITEM2(Weakjoined, _, _) -> report " ITEM2(Weakjoined, _, _) "
  | ITEM2(When, _, _) -> report " ITEM2(When, _, _) "
  | ITEM2(While, _, _) -> report " ITEM2(While, _, _) "
  | ITEM2(Written, _, _) -> report " ITEM2(Written, _, _) "
  | ITEM2(Xcoord, _, _) -> report " ITEM2(Xcoord, _, _) "
  | ITEM2(Xor, _, _) -> report " ITEM2(Xor, _, _) "
  | ITEM2(Ycoord, _, _) -> report " ITEM2(Ycoord, _, _) "
  | ITEM2(ILLEGAL _, _, _) -> report " ITEM2(ILLEGAL _, _, _) "
  | ITEM2(ID _, _, _) -> report " ITEM2(ID _, _, _) "
  | ITEM2(TLIST _, _, _) -> report " ITEM2(TLIST _, _, _) "
  | ITEM2(TLIST2 _, _, _) -> report " ITEM2(TLIST2 _, _, _) "
  | ITEM2(STRING _, _, _) -> report " ITEM2(STRING _, _, _) "
  | ITEM2(INT _, _, _) -> report " ITEM2(INT _, _, _) "
  | ITEM2(ENDOFFILE, _, _) -> report " ITEM2(ENDOFFILE, _, _) "
  | ITEM2(EOL, _, _) -> report " ITEM2(EOL, _, _) "
  | ITEM2(LPAREN, _, _) -> report " ITEM2(LPAREN, _, _) "
  | ITEM2(RPAREN, _, _) -> report " ITEM2(RPAREN, _, _) "
  | ITEM2(EMPTY, _, _) -> report " ITEM2(EMPTY, _, _) "

  | ITEM(Abs, _) -> report " ITEM(Abs, _) "
  | ITEM(Acload, _) -> report " ITEM(Acload, _) "
  | ITEM(After, _) -> report " ITEM(After, _) "
  | ITEM(And, _) -> report " ITEM(And, _) "
  | ITEM(Annotate, _) -> report " ITEM(Annotate, _) "
  | ITEM(Apply, _) -> report " ITEM(Apply, _) "
  | ITEM(Arc, _) -> report " ITEM(Arc, _) "
  | ITEM(Array, _) -> report " ITEM(Array, _) "
  | ITEM(Arraymacro, _) -> report " ITEM(Arraymacro, _) "
  | ITEM(Arrayrelatedinfo, _) -> report " ITEM(Arrayrelatedinfo, _) "
  | ITEM(Arraysite, _) -> report " ITEM(Arraysite, _) "
  | ITEM(Assign, _) -> report " ITEM(Assign, _) "
  | ITEM(Atleast, _) -> report " ITEM(Atleast, _) "
  | ITEM(Atmost, _) -> report " ITEM(Atmost, _) "
  | ITEM(Author, _) -> report " ITEM(Author, _) "
  | ITEM(Basearray, _) -> report " ITEM(Basearray, _) "
  | ITEM(Becomes, _) -> report " ITEM(Becomes, _) "
  | ITEM(Between, _) -> report " ITEM(Between, _) "
  | ITEM(Block, _) -> report " ITEM(Block, _) "
  | ITEM(Boolean, _) -> report " ITEM(Boolean, _) "
  | ITEM(Booleandisplay, _) -> report " ITEM(Booleandisplay, _) "
  | ITEM(Booleanmap, _) -> report " ITEM(Booleanmap, _) "
  | ITEM(Booleanvalue, _) -> report " ITEM(Booleanvalue, _) "
  | ITEM(Borderpattern, _) -> report " ITEM(Borderpattern, _) "
  | ITEM(Borderwidth, _) -> report " ITEM(Borderwidth, _) "
  | ITEM(Boundingbox, _) -> report " ITEM(Boundingbox, _) "
  | ITEM(Ceiling, _) -> report " ITEM(Ceiling, _) "
  | ITEM(Cell, _) -> report " ITEM(Cell, _) "
  | ITEM(Cellref, _) -> report " ITEM(Cellref, _) "
  | ITEM(Celltype, _) -> report " ITEM(Celltype, _) "
  | ITEM(Change, _) -> report " ITEM(Change, _) "
  | ITEM(Circle, _) -> report " ITEM(Circle, _) "
  | ITEM(Color, _) -> report " ITEM(Color, _) "
  | ITEM(Comment, _) -> Vparser.EMPTY
  | ITEM(Commentgraphics, _) -> report " ITEM(Commentgraphics, _) "
  | ITEM(Compound, _) -> report " ITEM(Compound, _) "
  | ITEM(Concat, _) -> report " ITEM(Concat, _) "
  | ITEM(Connectlocation, _) -> report " ITEM(Connectlocation, _) "
  | ITEM(Constant, _) -> report " ITEM(Constant, _) "
  | ITEM(Constraint, _) -> report " ITEM(Constraint, _) "
  | ITEM(Contents, _) -> report " ITEM(Contents, _) "
  | ITEM(Cornertype, _) -> report " ITEM(Cornertype, _) "
  | ITEM(Criticality, _) -> report " ITEM(Criticality, _) "
  | ITEM(Currentmap, _) -> report " ITEM(Currentmap, _) "
  | ITEM(Curve, _) -> report " ITEM(Curve, _) "
  | ITEM(Cycle, _) -> report " ITEM(Cycle, _) "
  | ITEM(Dataorigin, _) -> report " ITEM(Dataorigin, _) "
  | ITEM(Dcfaninload, _) -> report " ITEM(Dcfaninload, _) "
  | ITEM(Dcfanoutload, _) -> report " ITEM(Dcfanoutload, _) "
  | ITEM(Dcmaxfanin, _) -> report " ITEM(Dcmaxfanin, _) "
  | ITEM(Dcmaxfanout, _) -> report " ITEM(Dcmaxfanout, _) "
  | ITEM(Delay, _) -> report " ITEM(Delay, _) "
  | ITEM(Delta, _) -> report " ITEM(Delta, _) "
  | ITEM(Derivation, _) -> report " ITEM(Derivation, _) "
  | ITEM(Design, _) -> report " ITEM(Design, _) "
  | ITEM(Designator, _) -> report " ITEM(Designator, _) "
  | ITEM(Difference, _) -> report " ITEM(Difference, _) "
  | ITEM(Direction, _) -> report " ITEM(Direction, _) "
  | ITEM(Display, _) -> report " ITEM(Display, _) "
  | ITEM(Divide, _) -> report " ITEM(Divide, _) "
  | ITEM(Dominates, _) -> report " ITEM(Dominates, _) "
  | ITEM(Dot, _) -> report " ITEM(Dot, _) "
  | ITEM(Duration, _) -> report " ITEM(Duration, _) "
  | ITEM(E, _) -> report " ITEM(E, _) "
  | ITEM(Edif, _) -> report " ITEM(Edif, _) "
  | ITEM(Ediflevel, _) -> report " ITEM(Ediflevel, _) "
  | ITEM(Edifversion, _) -> report " ITEM(Edifversion, _) "
  | ITEM(Else, _) -> report " ITEM(Else, _) "
  | ITEM(Enclosuredistance, _) -> report " ITEM(Enclosuredistance, _) "
  | ITEM(Endtype, _) -> report " ITEM(Endtype, _) "
  | ITEM(Entry, _) -> report " ITEM(Entry, _) "
  | ITEM(Equal, _) -> report " ITEM(Equal, _) "
  | ITEM(Escape, _) -> report " ITEM(Escape, _) "
  | ITEM(Event, _) -> report " ITEM(Event, _) "
  | ITEM(Exactly, _) -> report " ITEM(Exactly, _) "
  | ITEM(External, _) -> report " ITEM(External, _) "
  | ITEM(Fabricate, _) -> report " ITEM(Fabricate, _) "
  | ITEM(False, _) -> report " ITEM(False, _) "
  | ITEM(Figure, _) -> report " ITEM(Figure, _) "
  | ITEM(Figurearea, _) -> report " ITEM(Figurearea, _) "
  | ITEM(Figuregroup, _) -> report " ITEM(Figuregroup, _) "
  | ITEM(Figuregroupobject, _) -> report " ITEM(Figuregroupobject, _) "
  | ITEM(Figuregroupoverride, _) -> report " ITEM(Figuregroupoverride, _) "
  | ITEM(Figuregroupref, _) -> report " ITEM(Figuregroupref, _) "
  | ITEM(Figureperimeter, _) -> report " ITEM(Figureperimeter, _) "
  | ITEM(Figurewidth, _) -> report " ITEM(Figurewidth, _) "
  | ITEM(Fillpattern, _) -> report " ITEM(Fillpattern, _) "
  | ITEM(Fix, _) -> report " ITEM(Fix, _) "
  | ITEM(Floor, _) -> report " ITEM(Floor, _) "
  | ITEM(Follow, _) -> report " ITEM(Follow, _) "
  | ITEM(Forbiddenevent, _) -> report " ITEM(Forbiddenevent, _) "
  | ITEM(Form, _) -> report " ITEM(Form, _) "
  | ITEM(Globalportref, _) -> report " ITEM(Globalportref, _) "
  | ITEM(Greaterthan, _) -> report " ITEM(Greaterthan, _) "
  | ITEM(Gridmap, _) -> report " ITEM(Gridmap, _) "
  | ITEM(If, _) -> report " ITEM(If, _) "
  | ITEM(Ignore, _) -> report " ITEM(Ignore, _) "
  | ITEM(Includefiguregroup, _) -> report " ITEM(Includefiguregroup, _) "
  | ITEM(Increasing, _) -> report " ITEM(Increasing, _) "
  | ITEM(Initial, _) -> report " ITEM(Initial, _) "
  | ITEM(Instance, _) -> report " ITEM(Instance, _) "
  | ITEM(Instancebackannotate, _) -> report " ITEM(Instancebackannotate, _) "
  | ITEM(Instancegroup, _) -> report " ITEM(Instancegroup, _) "
  | ITEM(Instancemap, _) -> report " ITEM(Instancemap, _) "
  | ITEM(Instancenamedef, _) -> report " ITEM(Instancenamedef, _) "
  | ITEM(Instanceref, _) -> report " ITEM(Instanceref, _) "
  | ITEM(Integer, _) -> report " ITEM(Integer, _) "
  | ITEM(Integerdisplay, _) -> report " ITEM(Integerdisplay, _) "
  | ITEM(Interface, _) -> report " ITEM(Interface, _) "
  | ITEM(Interfiguregroupspacing, _) -> report " ITEM(Interfiguregroupspacing, _) "
  | ITEM(Intersection, _) -> report " ITEM(Intersection, _) "
  | ITEM(Intrafiguregroupspacing, _) -> report " ITEM(Intrafiguregroupspacing, _) "
  | ITEM(Inverse, _) -> report " ITEM(Inverse, _) "
  | ITEM(Isolated, _) -> report " ITEM(Isolated, _) "
  | ITEM(Iterate, _) -> report " ITEM(Iterate, _) "
  | ITEM(Joined, _) -> report " ITEM(Joined, _) "
  | ITEM(Justify, _) -> report " ITEM(Justify, _) "
  | ITEM(Keyworddisplay, _) -> report " ITEM(Keyworddisplay, _) "
  | ITEM(Keywordlevel, _) -> report " ITEM(Keywordlevel, _) "
  | ITEM(Keywordmap, _) -> report " ITEM(Keywordmap, _) "
  | ITEM(Lessthan, _) -> report " ITEM(Lessthan, _) "
  | ITEM(Library, _) -> report " ITEM(Library, _) "
  | ITEM(Libraryref, _) -> report " ITEM(Libraryref, _) "
  | ITEM(Listofnets, _) -> report " ITEM(Listofnets, _) "
  | ITEM(Listofports, _) -> report " ITEM(Listofports, _) "
  | ITEM(Loaddelay, _) -> report " ITEM(Loaddelay, _) "
  | ITEM(Logicassign, _) -> report " ITEM(Logicassign, _) "
  | ITEM(Logicinput, _) -> report " ITEM(Logicinput, _) "
  | ITEM(Logiclist, _) -> report " ITEM(Logiclist, _) "
  | ITEM(Logicmapinput, _) -> report " ITEM(Logicmapinput, _) "
  | ITEM(Logicmapoutput, _) -> report " ITEM(Logicmapoutput, _) "
  | ITEM(Logiconeof, _) -> report " ITEM(Logiconeof, _) "
  | ITEM(Logicoutput, _) -> report " ITEM(Logicoutput, _) "
  | ITEM(Logicport, _) -> report " ITEM(Logicport, _) "
  | ITEM(Logicref, _) -> report " ITEM(Logicref, _) "
  | ITEM(Logicvalue, _) -> report " ITEM(Logicvalue, _) "
  | ITEM(Logicwaveform, _) -> report " ITEM(Logicwaveform, _) "
  | ITEM(Maintain, _) -> report " ITEM(Maintain, _) "
  | ITEM(Match, _) -> report " ITEM(Match, _) "
  | ITEM(Max, _) -> report " ITEM(Max, _) "
  | ITEM(Member, _) -> report " ITEM(Member, _) "
  | ITEM(Min, _) -> report " ITEM(Min, _) "
  | ITEM(Minomax, _) -> report " ITEM(Minomax, _) "
  | ITEM(Minomaxdisplay, _) -> report " ITEM(Minomaxdisplay, _) "
  | ITEM(Mnm, _) -> report " ITEM(Mnm, _) "
  | ITEM(Mod, _) -> report " ITEM(Mod, _) "
  | ITEM(Multiplevalueset, _) -> report " ITEM(Multiplevalueset, _) "
  | ITEM(Mustjoin, _) -> report " ITEM(Mustjoin, _) "
  | ITEM(Name, _) -> report " ITEM(Name, _) "
  | ITEM(Negate, _) -> report " ITEM(Negate, _) "
  | ITEM(Net, _) -> report " ITEM(Net, _) "
  | ITEM(Netbackannotate, _) -> report " ITEM(Netbackannotate, _) "
  | ITEM(Netbundle, _) -> report " ITEM(Netbundle, _) "
  | ITEM(Netdelay, _) -> report " ITEM(Netdelay, _) "
  | ITEM(Netgroup, _) -> report " ITEM(Netgroup, _) "
  | ITEM(Netmap, _) -> report " ITEM(Netmap, _) "
  | ITEM(Netref, _) -> report " ITEM(Netref, _) "
  | ITEM(Nochange, _) -> report " ITEM(Nochange, _) "
  | ITEM(Nonpermutable, _) -> report " ITEM(Nonpermutable, _) "
  | ITEM(Not, _) -> report " ITEM(Not, _) "
  | ITEM(Notallowed, _) -> report " ITEM(Notallowed, _) "
  | ITEM(Notchspacing, _) -> report " ITEM(Notchspacing, _) "
  | ITEM(Number, _) -> report " ITEM(Number, _) "
  | ITEM(Numberdefinition, _) -> report " ITEM(Numberdefinition, _) "
  | ITEM(Numberdisplay, _) -> report " ITEM(Numberdisplay, _) "
  | ITEM(Offpageconnector, _) -> report " ITEM(Offpageconnector, _) "
  | ITEM(Offsetevent, _) -> report " ITEM(Offsetevent, _) "
  | ITEM(Openshape, _) -> report " ITEM(Openshape, _) "
  | ITEM(Or, _) -> report " ITEM(Or, _) "
  | ITEM(Orientation, _) -> report " ITEM(Orientation, _) "
  | ITEM(Origin, _) -> report " ITEM(Origin, _) "
  | ITEM(Overhangdistance, _) -> report " ITEM(Overhangdistance, _) "
  | ITEM(Overlapdistance, _) -> report " ITEM(Overlapdistance, _) "
  | ITEM(Oversize, _) -> report " ITEM(Oversize, _) "
  | ITEM(Owner, _) -> report " ITEM(Owner, _) "
  | ITEM(Page, _) -> report " ITEM(Page, _) "
  | ITEM(Pagesize, _) -> report " ITEM(Pagesize, _) "
  | ITEM(Parameter, _) -> report " ITEM(Parameter, _) "
  | ITEM(Parameterassign, _) -> report " ITEM(Parameterassign, _) "
  | ITEM(Parameterdisplay, _) -> report " ITEM(Parameterdisplay, _) "
  | ITEM(Path, _) -> report " ITEM(Path, _) "
  | ITEM(Pathdelay, _) -> report " ITEM(Pathdelay, _) "
  | ITEM(Pathwidth, _) -> report " ITEM(Pathwidth, _) "
  | ITEM(Permutable, _) -> report " ITEM(Permutable, _) "
  | ITEM(Physicaldesignrule, _) -> report " ITEM(Physicaldesignrule, _) "
  | ITEM(Plug, _) -> report " ITEM(Plug, _) "
  | ITEM(Point, _) -> report " ITEM(Point, _) "
  | ITEM(Pointdisplay, _) -> report " ITEM(Pointdisplay, _) "
  | ITEM(Pointlist, _) -> report " ITEM(Pointlist, _) "
  | ITEM(Pointsubtract, _) -> report " ITEM(Pointsubtract, _) "
  | ITEM(Pointsum, _) -> report " ITEM(Pointsum, _) "
  | ITEM(Polygon, _) -> report " ITEM(Polygon, _) "
  | ITEM(Port, _) -> report " ITEM(Port, _) "
  | ITEM(Portbackannotate, _) -> report " ITEM(Portbackannotate, _) "
  | ITEM(Portbundle, _) -> report " ITEM(Portbundle, _) "
  | ITEM(Portdelay, _) -> report " ITEM(Portdelay, _) "
  | ITEM(Portgroup, _) -> report " ITEM(Portgroup, _) "
  | ITEM(Portimplementation, _) -> report " ITEM(Portimplementation, _) "
  | ITEM(Portinstance, _) -> report " ITEM(Portinstance, _) "
  | ITEM(Portlist, _) -> report " ITEM(Portlist, _) "
  | ITEM(Portlistalias, _) -> report " ITEM(Portlistalias, _) "
  | ITEM(Portmap, _) -> report " ITEM(Portmap, _) "
  | ITEM(Portref, _) -> report " ITEM(Portref, _) "
  | ITEM(Product, _) -> report " ITEM(Product, _) "
  | ITEM(Program, _) -> report " ITEM(Program, _) "
  | ITEM(Property, _) -> report " ITEM(Property, _) "
  | ITEM(Propertydisplay, _) -> report " ITEM(Propertydisplay, _) "
  | ITEM(Protectionframe, _) -> report " ITEM(Protectionframe, _) "
  | ITEM(Pt, _) -> report " ITEM(Pt, _) "
  | ITEM(Rangevector, _) -> report " ITEM(Rangevector, _) "
  | ITEM(Rectangle, _) -> report " ITEM(Rectangle, _) "
  | ITEM(Rectanglesize, _) -> report " ITEM(Rectanglesize, _) "
  | ITEM(Rename, _) -> report " ITEM(Rename, _) "
  | ITEM(Resolves, _) -> report " ITEM(Resolves, _) "
  | ITEM(Scale, _) -> report " ITEM(Scale, _) "
  | ITEM(Scalex, _) -> report " ITEM(Scalex, _) "
  | ITEM(Scaley, _) -> report " ITEM(Scaley, _) "
  | ITEM(Section, _) -> report " ITEM(Section, _) "
  | ITEM(Shape, _) -> report " ITEM(Shape, _) "
  | ITEM(Simulate, _) -> report " ITEM(Simulate, _) "
  | ITEM(Simulationinfo, _) -> report " ITEM(Simulationinfo, _) "
  | ITEM(Singlevalueset, _) -> report " ITEM(Singlevalueset, _) "
  | ITEM(Site, _) -> report " ITEM(Site, _) "
  | ITEM(Socket, _) -> report " ITEM(Socket, _) "
  | ITEM(Socketset, _) -> report " ITEM(Socketset, _) "
  | ITEM(Statement, _) -> report " ITEM(Statement, _) "
  | ITEM(Status, _) -> report " ITEM(Status, _) "
  | ITEM(Steady, _) -> report " ITEM(Steady, _) "
  | ITEM(Strictlyincreasing, _) -> report " ITEM(Strictlyincreasing, _) "
  | ITEM(String, _) -> report " ITEM(String, _) "
  | ITEM(Stringdisplay, _) -> report " ITEM(Stringdisplay, _) "
  | ITEM(Strong, _) -> report " ITEM(Strong, _) "
  | ITEM(Subtract, _) -> report " ITEM(Subtract, _) "
  | ITEM(Sum, _) -> report " ITEM(Sum, _) "
  | ITEM(Symbol, _) -> report " ITEM(Symbol, _) "
  | ITEM(Symmetry, _) -> report " ITEM(Symmetry, _) "
  | ITEM(Table, _) -> report " ITEM(Table, _) "
  | ITEM(Tabledefault, _) -> report " ITEM(Tabledefault, _) "
  | ITEM(Technology, _) -> report " ITEM(Technology, _) "
  | ITEM(Textheight, _) -> report " ITEM(Textheight, _) "
  | ITEM(Then, _) -> report " ITEM(Then, _) "
  | ITEM(Timeinterval, _) -> report " ITEM(Timeinterval, _) "
  | ITEM(Timestamp, _) -> report " ITEM(Timestamp, _) "
  | ITEM(Timing, _) -> report " ITEM(Timing, _) "
  | ITEM(Transform, _) -> report " ITEM(Transform, _) "
  | ITEM(Transition, _) -> report " ITEM(Transition, _) "
  | ITEM(Trigger, _) -> report " ITEM(Trigger, _) "
  | ITEM(True, _) -> report " ITEM(True, _) "
  | ITEM(Typedvalue, _) -> report " ITEM(Typedvalue, _) "
  | ITEM(Unconstrained, _) -> report " ITEM(Unconstrained, _) "
  | ITEM(Undefined, _) -> report " ITEM(Undefined, _) "
  | ITEM(Union, _) -> report " ITEM(Union, _) "
  | ITEM(Unit, _) -> report " ITEM(Unit, _) "
  | ITEM(Unused, _) -> report " ITEM(Unused, _) "
  | ITEM(Userdata, _) -> report " ITEM(Userdata, _) "
  | ITEM(Valuenameref, _) -> report " ITEM(Valuenameref, _) "
  | ITEM(Variable, _) -> report " ITEM(Variable, _) "
  | ITEM(Version, _) -> report " ITEM(Version, _) "
  | ITEM(View, _) -> report " ITEM(View, _) "
  | ITEM(Viewlist, _) -> report " ITEM(Viewlist, _) "
  | ITEM(Viewmap, _) -> report " ITEM(Viewmap, _) "
  | ITEM(Viewref, _) -> report " ITEM(Viewref, _) "
  | ITEM(Viewtype, _) -> report " ITEM(Viewtype, _) "
  | ITEM(Visible, _) -> report " ITEM(Visible, _) "
  | ITEM(Voltagemap, _) -> report " ITEM(Voltagemap, _) "
  | ITEM(Wavevalue, _) -> report " ITEM(Wavevalue, _) "
  | ITEM(Weak, _) -> report " ITEM(Weak, _) "
  | ITEM(Weakjoined, _) -> report " ITEM(Weakjoined, _) "
  | ITEM(When, _) -> report " ITEM(When, _) "
  | ITEM(While, _) -> report " ITEM(While, _) "
  | ITEM(Written, _) -> report " ITEM(Written, _) "
  | ITEM(Xcoord, _) -> report " ITEM(Xcoord, _) "
  | ITEM(Xor, _) -> report " ITEM(Xor, _) "
  | ITEM(Ycoord, _) -> report " ITEM(Ycoord, _) "
  | ITEM(ILLEGAL _, _) -> report " ITEM(ILLEGAL _, _) "
  | ITEM(ID _, _) -> report " ITEM(ID _, _) "
  | ITEM(TLIST _, _) -> report " ITEM(TLIST _, _) "
  | ITEM(TLIST2 _, _) -> report " ITEM(TLIST2 _, _) "
  | ITEM(STRING _, _) -> report " ITEM(STRING _, _) "
  | ITEM(INT _, _) -> report " ITEM(INT _, _) "
  | ITEM(ENDOFFILE, _) -> report " ITEM(ENDOFFILE, _) "
  | ITEM(EOL, _) -> report " ITEM(EOL, _) "
  | ITEM(LPAREN, _) -> report " ITEM(LPAREN, _) "
  | ITEM(RPAREN, _) -> report " ITEM(RPAREN, _) "
  | ITEM(EMPTY, _) -> report " ITEM(EMPTY, _) "
  | ITEM ((ITEM _|ITEM2 _), _) -> report " ITEM ((ITEM _|ITEM2 _), _) "
  | ITEM2 ((ITEM _|ITEM2 _), _, _) -> report " ITEM2 ((ITEM _|ITEM2 _), _, _) "
