# 19 "File_lex.mll"
 
  open Lexing
  open File

  let verbose = ref false
  let lincnt = ref 0

  let keyword =
    let h = Hashtbl.create 17 in
    List.iter 
      (fun (k,s) -> Hashtbl.add h s k)
      [
      KW_DEFINE, "KW_DEFINE"; 
      KW_DEFINE_GROUP, "KW_DEFINE_GROUP"; 
      KW_FALSE, "KW_FALSE"; 
      KW_TRUE, "KW_TRUE"; 
      ];
    fun s -> Hashtbl.find h s

let tok arg = if !verbose then print_endline ( match arg with
  | IDENT id -> id
  | NUM n -> n
  | oth -> File_ord.getstr oth );
  arg

# 28 "File_lex.ml"
let __ocaml_lex_tables = {
  Lexing.lex_base =
   "\000\000\214\255\215\255\216\255\217\255\218\255\219\255\220\255\
    \221\255\222\255\223\255\224\255\227\255\229\255\230\255\231\255\
    \232\255\233\255\234\255\235\255\236\255\237\255\238\255\239\255\
    \241\255\242\255\243\255\244\255\246\255\247\255\079\000\103\000\
    \157\000\170\000\251\255\001\000\253\255\219\000\096\000\255\255\
    \252\255\185\000\249\255\105\000\098\000\254\255\094\000\255\255\
    ";
  Lexing.lex_backtrk =
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\007\000\010\000\
    \005\000\027\000\255\255\030\000\255\255\001\000\029\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\001\000\255\255\
    ";
  Lexing.lex_default =
   "\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\255\255\043\000\
    \255\255\255\255\000\000\255\255\000\000\255\255\255\255\000\000\
    \000\000\255\255\000\000\043\000\045\000\000\000\255\255\000\000\
    ";
  Lexing.lex_trans =
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\037\000\036\000\040\000\000\000\037\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \037\000\028\000\031\000\027\000\026\000\025\000\024\000\034\000\
    \023\000\019\000\015\000\014\000\013\000\033\000\012\000\038\000\
    \032\000\032\000\032\000\032\000\032\000\032\000\032\000\032\000\
    \032\000\032\000\011\000\010\000\020\000\009\000\016\000\008\000\
    \007\000\030\000\030\000\030\000\030\000\030\000\030\000\030\000\
    \030\000\030\000\030\000\030\000\030\000\030\000\030\000\030\000\
    \030\000\030\000\030\000\030\000\030\000\030\000\030\000\030\000\
    \030\000\030\000\030\000\022\000\035\000\018\000\006\000\005\000\
    \004\000\030\000\030\000\030\000\030\000\030\000\030\000\030\000\
    \030\000\030\000\030\000\030\000\030\000\030\000\030\000\030\000\
    \030\000\030\000\030\000\030\000\030\000\030\000\030\000\030\000\
    \030\000\030\000\030\000\021\000\003\000\017\000\002\000\030\000\
    \030\000\030\000\030\000\030\000\030\000\030\000\030\000\030\000\
    \030\000\042\000\039\000\042\000\046\000\047\000\000\000\000\000\
    \030\000\030\000\030\000\030\000\030\000\030\000\030\000\030\000\
    \030\000\030\000\030\000\030\000\030\000\030\000\030\000\030\000\
    \030\000\030\000\030\000\030\000\030\000\030\000\030\000\030\000\
    \030\000\030\000\000\000\000\000\000\000\000\000\030\000\000\000\
    \030\000\030\000\030\000\030\000\030\000\030\000\030\000\030\000\
    \030\000\030\000\030\000\030\000\030\000\030\000\030\000\030\000\
    \030\000\030\000\030\000\030\000\030\000\030\000\030\000\030\000\
    \030\000\030\000\032\000\032\000\000\000\032\000\032\000\032\000\
    \032\000\032\000\032\000\032\000\032\000\032\000\032\000\041\000\
    \000\000\000\000\032\000\032\000\032\000\032\000\032\000\032\000\
    \032\000\032\000\032\000\032\000\037\000\000\000\041\000\000\000\
    \037\000\032\000\032\000\032\000\032\000\032\000\032\000\032\000\
    \032\000\032\000\032\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\037\000\000\000\000\000\000\000\000\000\
    \029\000\000\000\032\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\255\255\000\000\000\000\000\000\000\000\255\255\
    \000\000\255\255\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000";
  Lexing.lex_check =
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\000\000\035\000\255\255\000\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\030\000\
    \030\000\030\000\030\000\030\000\030\000\030\000\030\000\030\000\
    \030\000\031\000\038\000\043\000\044\000\046\000\255\255\255\255\
    \030\000\030\000\030\000\030\000\030\000\030\000\030\000\030\000\
    \030\000\030\000\030\000\030\000\030\000\030\000\030\000\030\000\
    \030\000\030\000\030\000\030\000\030\000\030\000\030\000\030\000\
    \030\000\030\000\255\255\255\255\255\255\255\255\030\000\255\255\
    \030\000\030\000\030\000\030\000\030\000\030\000\030\000\030\000\
    \030\000\030\000\030\000\030\000\030\000\030\000\030\000\030\000\
    \030\000\030\000\030\000\030\000\030\000\030\000\030\000\030\000\
    \030\000\030\000\032\000\032\000\255\255\032\000\032\000\032\000\
    \032\000\032\000\032\000\032\000\032\000\032\000\032\000\033\000\
    \255\255\255\255\033\000\033\000\033\000\033\000\033\000\033\000\
    \033\000\033\000\033\000\033\000\037\000\255\255\041\000\255\255\
    \037\000\041\000\041\000\041\000\041\000\041\000\041\000\041\000\
    \041\000\041\000\041\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\037\000\255\255\255\255\255\255\255\255\
    \000\000\255\255\032\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\044\000\255\255\255\255\255\255\255\255\031\000\
    \255\255\043\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255";
  Lexing.lex_base_code =
   "";
  Lexing.lex_backtrk_code =
   "";
  Lexing.lex_default_code =
   "";
  Lexing.lex_trans_code =
   "";
  Lexing.lex_check_code =
   "";
  Lexing.lex_code =
   "";
}

let rec token lexbuf =
   __ocaml_lex_token_rec lexbuf 0
and __ocaml_lex_token_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 56 "File_lex.mll"
      ( comment lexbuf )
# 197 "File_lex.ml"

  | 1 ->
# 58 "File_lex.mll"
      ( token lexbuf )
# 202 "File_lex.ml"

  | 2 ->
# 60 "File_lex.mll"
      ( incr lincnt; token lexbuf )
# 207 "File_lex.ml"

  | 3 ->
# 62 "File_lex.mll"
      ( incr lincnt; token lexbuf )
# 212 "File_lex.ml"

  | 4 ->
# 64 "File_lex.mll"
      ( tok ( QUOTE ) )
# 217 "File_lex.ml"

  | 5 ->
let
# 65 "File_lex.mll"
              n
# 223 "File_lex.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 66 "File_lex.mll"
      ( tok ( NUM n ) )
# 227 "File_lex.ml"

  | 6 ->
let
# 67 "File_lex.mll"
              s
# 233 "File_lex.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 68 "File_lex.mll"
      ( tok ( STRING (String.sub s 1 (String.length s - 2) ) ) )
# 237 "File_lex.ml"

  | 7 ->
let
# 69 "File_lex.mll"
             s
# 243 "File_lex.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 70 "File_lex.mll"
      ( tok ( try keyword s with Not_found -> IDENT s ) )
# 247 "File_lex.ml"

  | 8 ->
# 72 "File_lex.mll"
      ( tok ( EOF_TOKEN ) )
# 252 "File_lex.ml"

  | 9 ->
# 74 "File_lex.mll"
( tok ( PLING ) )
# 257 "File_lex.ml"

  | 10 ->
# 77 "File_lex.mll"
( tok ( DOUBLEQUOTE ) )
# 262 "File_lex.ml"

  | 11 ->
# 80 "File_lex.mll"
( tok ( HASH ) )
# 267 "File_lex.ml"

  | 12 ->
# 83 "File_lex.mll"
( tok ( DOLLAR ) )
# 272 "File_lex.ml"

  | 13 ->
# 86 "File_lex.mll"
( tok ( PERCENT ) )
# 277 "File_lex.ml"

  | 14 ->
# 89 "File_lex.mll"
( tok ( AMPERSAND ) )
# 282 "File_lex.ml"

  | 15 ->
# 92 "File_lex.mll"
( tok ( QUOTE ) )
# 287 "File_lex.ml"

  | 16 ->
# 95 "File_lex.mll"
( tok ( LPAR ) )
# 292 "File_lex.ml"

  | 17 ->
# 98 "File_lex.mll"
( tok ( LBRACK ) )
# 297 "File_lex.ml"

  | 18 ->
# 101 "File_lex.mll"
( tok ( LCURLY ) )
# 302 "File_lex.ml"

  | 19 ->
# 104 "File_lex.mll"
( tok ( LESS ) )
# 307 "File_lex.ml"

  | 20 ->
# 107 "File_lex.mll"
( tok ( RPAR ) )
# 312 "File_lex.ml"

  | 21 ->
# 110 "File_lex.mll"
( tok ( RBRACK ) )
# 317 "File_lex.ml"

  | 22 ->
# 113 "File_lex.mll"
( tok ( RCURLY ) )
# 322 "File_lex.ml"

  | 23 ->
# 116 "File_lex.mll"
( tok ( GREATER ) )
# 327 "File_lex.ml"

  | 24 ->
# 119 "File_lex.mll"
( tok ( MULT ) )
# 332 "File_lex.ml"

  | 25 ->
# 122 "File_lex.mll"
( tok ( PLUS ) )
# 337 "File_lex.ml"

  | 26 ->
# 125 "File_lex.mll"
( tok ( COMMA ) )
# 342 "File_lex.ml"

  | 27 ->
# 128 "File_lex.mll"
( tok ( MINUS ) )
# 347 "File_lex.ml"

  | 28 ->
# 131 "File_lex.mll"
( tok ( DOT ) )
# 352 "File_lex.ml"

  | 29 ->
# 134 "File_lex.mll"
( tok ( DIV ) )
# 357 "File_lex.ml"

  | 30 ->
# 137 "File_lex.mll"
( tok ( BACKSLASH ) )
# 362 "File_lex.ml"

  | 31 ->
# 140 "File_lex.mll"
( tok ( COLON ) )
# 367 "File_lex.ml"

  | 32 ->
# 143 "File_lex.mll"
( tok ( SEMI ) )
# 372 "File_lex.ml"

  | 33 ->
# 146 "File_lex.mll"
( tok ( EQ ) )
# 377 "File_lex.ml"

  | 34 ->
# 149 "File_lex.mll"
( tok ( QUERY ) )
# 382 "File_lex.ml"

  | 35 ->
# 152 "File_lex.mll"
( tok ( AT ) )
# 387 "File_lex.ml"

  | 36 ->
# 155 "File_lex.mll"
( tok ( CARET ) )
# 392 "File_lex.ml"

  | 37 ->
# 158 "File_lex.mll"
( tok ( UNDERSCORE ) )
# 397 "File_lex.ml"

  | 38 ->
# 161 "File_lex.mll"
( tok ( BACKQUOTE ) )
# 402 "File_lex.ml"

  | 39 ->
# 164 "File_lex.mll"
( tok ( VBAR ) )
# 407 "File_lex.ml"

  | 40 ->
# 167 "File_lex.mll"
( tok ( TILDE ) )
# 412 "File_lex.ml"

  | 41 ->
let
# 169 "File_lex.mll"
       c
# 418 "File_lex.ml"
= Lexing.sub_lexeme_char lexbuf lexbuf.Lexing.lex_start_pos in
# 170 "File_lex.mll"
      ( tok ( STRING (String.make 1 c) ) )
# 422 "File_lex.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf;
      __ocaml_lex_token_rec lexbuf __ocaml_lex_state

and comment lexbuf =
   __ocaml_lex_comment_rec lexbuf 44
and __ocaml_lex_comment_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 173 "File_lex.mll"
               ( token lexbuf )
# 434 "File_lex.ml"

  | 1 ->
# 174 "File_lex.mll"
      ( comment lexbuf )
# 439 "File_lex.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf;
      __ocaml_lex_comment_rec lexbuf __ocaml_lex_state

;;

