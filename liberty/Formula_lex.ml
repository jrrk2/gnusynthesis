# 19 "Formula_lex.mll"
 
  open Lexing
  open Formula

  let verbose = ref false
  let lincnt = ref 0

let tok arg = if !verbose then print_endline ( match arg with
  | IDENT id -> id
  | NUM n -> n
  | oth -> Formula_ord.getstr oth );
  arg

# 16 "Formula_lex.ml"
let __ocaml_lex_tables = {
  Lexing.lex_base =
   "\000\000\214\255\215\255\216\255\217\255\218\255\219\255\220\255\
    \221\255\222\255\223\255\224\255\227\255\229\255\230\255\231\255\
    \232\255\233\255\234\255\235\255\236\255\237\255\238\255\239\255\
    \241\255\242\255\243\255\244\255\246\255\247\255\079\000\103\000\
    \157\000\170\000\251\255\001\000\253\255\219\000\096\000\255\255\
    \252\255\185\000\249\255\105\000\098\000\254\255\094\000\255\255\
    ";
  Lexing.lex_backtrk =
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\007\000\010\000\
    \005\000\027\000\255\255\030\000\255\255\001\000\029\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\001\000\255\255\
    ";
  Lexing.lex_default =
   "\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\255\255\043\000\
    \255\255\255\255\000\000\255\255\000\000\255\255\255\255\000\000\
    \000\000\255\255\000\000\043\000\045\000\000\000\255\255\000\000\
    ";
  Lexing.lex_trans =
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\037\000\036\000\040\000\000\000\037\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \037\000\028\000\031\000\027\000\026\000\025\000\024\000\034\000\
    \023\000\019\000\015\000\014\000\013\000\033\000\012\000\038\000\
    \032\000\032\000\032\000\032\000\032\000\032\000\032\000\032\000\
    \032\000\032\000\011\000\010\000\020\000\009\000\016\000\008\000\
    \007\000\030\000\030\000\030\000\030\000\030\000\030\000\030\000\
    \030\000\030\000\030\000\030\000\030\000\030\000\030\000\030\000\
    \030\000\030\000\030\000\030\000\030\000\030\000\030\000\030\000\
    \030\000\030\000\030\000\022\000\035\000\018\000\006\000\005\000\
    \004\000\030\000\030\000\030\000\030\000\030\000\030\000\030\000\
    \030\000\030\000\030\000\030\000\030\000\030\000\030\000\030\000\
    \030\000\030\000\030\000\030\000\030\000\030\000\030\000\030\000\
    \030\000\030\000\030\000\021\000\003\000\017\000\002\000\030\000\
    \030\000\030\000\030\000\030\000\030\000\030\000\030\000\030\000\
    \030\000\042\000\039\000\042\000\046\000\047\000\000\000\000\000\
    \030\000\030\000\030\000\030\000\030\000\030\000\030\000\030\000\
    \030\000\030\000\030\000\030\000\030\000\030\000\030\000\030\000\
    \030\000\030\000\030\000\030\000\030\000\030\000\030\000\030\000\
    \030\000\030\000\000\000\000\000\000\000\000\000\030\000\000\000\
    \030\000\030\000\030\000\030\000\030\000\030\000\030\000\030\000\
    \030\000\030\000\030\000\030\000\030\000\030\000\030\000\030\000\
    \030\000\030\000\030\000\030\000\030\000\030\000\030\000\030\000\
    \030\000\030\000\032\000\032\000\000\000\032\000\032\000\032\000\
    \032\000\032\000\032\000\032\000\032\000\032\000\032\000\041\000\
    \000\000\000\000\032\000\032\000\032\000\032\000\032\000\032\000\
    \032\000\032\000\032\000\032\000\037\000\000\000\041\000\000\000\
    \037\000\032\000\032\000\032\000\032\000\032\000\032\000\032\000\
    \032\000\032\000\032\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\037\000\000\000\000\000\000\000\000\000\
    \029\000\000\000\032\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\255\255\000\000\000\000\000\000\000\000\255\255\
    \000\000\255\255\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000";
  Lexing.lex_check =
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\000\000\035\000\255\255\000\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\030\000\
    \030\000\030\000\030\000\030\000\030\000\030\000\030\000\030\000\
    \030\000\031\000\038\000\043\000\044\000\046\000\255\255\255\255\
    \030\000\030\000\030\000\030\000\030\000\030\000\030\000\030\000\
    \030\000\030\000\030\000\030\000\030\000\030\000\030\000\030\000\
    \030\000\030\000\030\000\030\000\030\000\030\000\030\000\030\000\
    \030\000\030\000\255\255\255\255\255\255\255\255\030\000\255\255\
    \030\000\030\000\030\000\030\000\030\000\030\000\030\000\030\000\
    \030\000\030\000\030\000\030\000\030\000\030\000\030\000\030\000\
    \030\000\030\000\030\000\030\000\030\000\030\000\030\000\030\000\
    \030\000\030\000\032\000\032\000\255\255\032\000\032\000\032\000\
    \032\000\032\000\032\000\032\000\032\000\032\000\032\000\033\000\
    \255\255\255\255\033\000\033\000\033\000\033\000\033\000\033\000\
    \033\000\033\000\033\000\033\000\037\000\255\255\041\000\255\255\
    \037\000\041\000\041\000\041\000\041\000\041\000\041\000\041\000\
    \041\000\041\000\041\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\037\000\255\255\255\255\255\255\255\255\
    \000\000\255\255\032\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\044\000\255\255\255\255\255\255\255\255\031\000\
    \255\255\043\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255";
  Lexing.lex_base_code =
   "";
  Lexing.lex_backtrk_code =
   "";
  Lexing.lex_default_code =
   "";
  Lexing.lex_trans_code =
   "";
  Lexing.lex_check_code =
   "";
  Lexing.lex_code =
   "";
}

let rec token lexbuf =
   __ocaml_lex_token_rec lexbuf 0
and __ocaml_lex_token_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 44 "Formula_lex.mll"
      ( comment lexbuf )
# 185 "Formula_lex.ml"

  | 1 ->
# 46 "Formula_lex.mll"
      ( token lexbuf )
# 190 "Formula_lex.ml"

  | 2 ->
# 48 "Formula_lex.mll"
      ( incr lincnt; token lexbuf )
# 195 "Formula_lex.ml"

  | 3 ->
# 50 "Formula_lex.mll"
      ( incr lincnt; token lexbuf )
# 200 "Formula_lex.ml"

  | 4 ->
# 52 "Formula_lex.mll"
      ( tok ( QUOTE ) )
# 205 "Formula_lex.ml"

  | 5 ->
let
# 53 "Formula_lex.mll"
              n
# 211 "Formula_lex.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 54 "Formula_lex.mll"
      ( tok ( NUM n ) )
# 215 "Formula_lex.ml"

  | 6 ->
let
# 55 "Formula_lex.mll"
              s
# 221 "Formula_lex.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 56 "Formula_lex.mll"
      ( tok ( STRING (String.sub s 1 (String.length s - 2) ) ) )
# 225 "Formula_lex.ml"

  | 7 ->
let
# 57 "Formula_lex.mll"
             s
# 231 "Formula_lex.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 58 "Formula_lex.mll"
      ( tok ( IDENT s ) )
# 235 "Formula_lex.ml"

  | 8 ->
# 60 "Formula_lex.mll"
      ( tok ( EOF_TOKEN ) )
# 240 "Formula_lex.ml"

  | 9 ->
# 62 "Formula_lex.mll"
( tok ( PLING ) )
# 245 "Formula_lex.ml"

  | 10 ->
# 65 "Formula_lex.mll"
( tok ( DOUBLEQUOTE ) )
# 250 "Formula_lex.ml"

  | 11 ->
# 68 "Formula_lex.mll"
( tok ( HASH ) )
# 255 "Formula_lex.ml"

  | 12 ->
# 71 "Formula_lex.mll"
( tok ( DOLLAR ) )
# 260 "Formula_lex.ml"

  | 13 ->
# 74 "Formula_lex.mll"
( tok ( PERCENT ) )
# 265 "Formula_lex.ml"

  | 14 ->
# 77 "Formula_lex.mll"
( tok ( AMPERSAND ) )
# 270 "Formula_lex.ml"

  | 15 ->
# 80 "Formula_lex.mll"
( tok ( QUOTE ) )
# 275 "Formula_lex.ml"

  | 16 ->
# 83 "Formula_lex.mll"
( tok ( LPAR ) )
# 280 "Formula_lex.ml"

  | 17 ->
# 86 "Formula_lex.mll"
( tok ( LBRACK ) )
# 285 "Formula_lex.ml"

  | 18 ->
# 89 "Formula_lex.mll"
( tok ( LCURLY ) )
# 290 "Formula_lex.ml"

  | 19 ->
# 92 "Formula_lex.mll"
( tok ( LESS ) )
# 295 "Formula_lex.ml"

  | 20 ->
# 95 "Formula_lex.mll"
( tok ( RPAR ) )
# 300 "Formula_lex.ml"

  | 21 ->
# 98 "Formula_lex.mll"
( tok ( RBRACK ) )
# 305 "Formula_lex.ml"

  | 22 ->
# 101 "Formula_lex.mll"
( tok ( RCURLY ) )
# 310 "Formula_lex.ml"

  | 23 ->
# 104 "Formula_lex.mll"
( tok ( GREATER ) )
# 315 "Formula_lex.ml"

  | 24 ->
# 107 "Formula_lex.mll"
( tok ( MULT ) )
# 320 "Formula_lex.ml"

  | 25 ->
# 110 "Formula_lex.mll"
( tok ( PLUS ) )
# 325 "Formula_lex.ml"

  | 26 ->
# 113 "Formula_lex.mll"
( tok ( COMMA ) )
# 330 "Formula_lex.ml"

  | 27 ->
# 116 "Formula_lex.mll"
( tok ( MINUS ) )
# 335 "Formula_lex.ml"

  | 28 ->
# 119 "Formula_lex.mll"
( tok ( DOT ) )
# 340 "Formula_lex.ml"

  | 29 ->
# 122 "Formula_lex.mll"
( tok ( DIV ) )
# 345 "Formula_lex.ml"

  | 30 ->
# 125 "Formula_lex.mll"
( tok ( BACKSLASH ) )
# 350 "Formula_lex.ml"

  | 31 ->
# 128 "Formula_lex.mll"
( tok ( COLON ) )
# 355 "Formula_lex.ml"

  | 32 ->
# 131 "Formula_lex.mll"
( tok ( SEMI ) )
# 360 "Formula_lex.ml"

  | 33 ->
# 134 "Formula_lex.mll"
( tok ( EQ ) )
# 365 "Formula_lex.ml"

  | 34 ->
# 137 "Formula_lex.mll"
( tok ( QUERY ) )
# 370 "Formula_lex.ml"

  | 35 ->
# 140 "Formula_lex.mll"
( tok ( AT ) )
# 375 "Formula_lex.ml"

  | 36 ->
# 143 "Formula_lex.mll"
( tok ( CARET ) )
# 380 "Formula_lex.ml"

  | 37 ->
# 146 "Formula_lex.mll"
( tok ( UNDERSCORE ) )
# 385 "Formula_lex.ml"

  | 38 ->
# 149 "Formula_lex.mll"
( tok ( BACKQUOTE ) )
# 390 "Formula_lex.ml"

  | 39 ->
# 152 "Formula_lex.mll"
( tok ( VBAR ) )
# 395 "Formula_lex.ml"

  | 40 ->
# 155 "Formula_lex.mll"
( tok ( TILDE ) )
# 400 "Formula_lex.ml"

  | 41 ->
let
# 157 "Formula_lex.mll"
       c
# 406 "Formula_lex.ml"
= Lexing.sub_lexeme_char lexbuf lexbuf.Lexing.lex_start_pos in
# 158 "Formula_lex.mll"
      ( tok ( STRING (String.make 1 c) ) )
# 410 "Formula_lex.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf;
      __ocaml_lex_token_rec lexbuf __ocaml_lex_state

and comment lexbuf =
   __ocaml_lex_comment_rec lexbuf 44
and __ocaml_lex_comment_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 161 "Formula_lex.mll"
               ( token lexbuf )
# 422 "Formula_lex.ml"

  | 1 ->
# 162 "Formula_lex.mll"
      ( comment lexbuf )
# 427 "Formula_lex.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf;
      __ocaml_lex_comment_rec lexbuf __ocaml_lex_state

;;

