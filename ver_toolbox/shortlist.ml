open Vparser

let intsymbols = Hashtbl.create 256
let revsymbols = Hashtbl.create 256

let _ = Hashtbl.iter (fun s k -> Hashtbl.add revsymbols k s) Vlexer.ksymbols

let _ = List.iter (fun (k,s) -> Hashtbl.add intsymbols s k; Hashtbl.add revsymbols k s) [
(ASSERT, "assert");
(ASSIGNMENT, "assignment");
(AT, "at");
(BIDIR, "bidir");
(BITSEL, "bitsel");
(CASECOND, "casecond");
(CELLPIN, "cellpin");
(COLON, "colon");
(COMMA, "comma");
(CONCAT, "concat");
(COVER, "cover");
(DIVIDE, "divide");
(DLYASSIGNMENT, "dlyassignment");
(DOLLAR, "dollar");
(DOT, "dot");
(DRIVER, "driver");
(D_C, "$c");
(D_RANDOM, "$random");
(D_STIME, "$stime");
(D_TEST_PLUSARGS, "$test_plusargs");
(EMPTY, "empty");
(ENDCLOCKING, "endclocking");
(ENDLABEL, "endlabel");
(EOF, "eof");
(EQUALS, "equals");
(FINITE, "finite");
(FULLSKEW, "fullskew");
(FUNCASSIGNED, "funcassigned");
(FUNCREF, "funcref");
(FUNCUSED, "funcused");
(GENCASE, "gencase");
(GENCASECOND, "gencasecond");
(GENITEM, "genitem");
(GREATER, "greater");
(HASH, "hash");
(IF_NONE, "if_none");
(IMPLICIT, "implicit");
(IOPORT, "ioport");
(LBRACK, "lbrack");
(LCURLY, "lcurly");
(LESS, "less");
(LPAREN, "lparen");
(MEMORY, "memory");
(MINTYPMAX, "mintypmax");
(MINUS, "minus");
(MODINST, "modinst");
(MODULO, "modulo");
(NAMED, "named");
(NOCHANGE, "nochange");
(NOSHOWCANCELLED, "noshowcancelled");
(NOTCONST, "notconst");
(PARAMUSED, "paramused");
(PARTSEL, "partsel");
(PATHPULSE, "pathpulse");
(PLING, "pling");
(PLUS, "plus");
(PRIMINST, "priminst");
(PROPERTY, "property");
(PROPOSITION, "proposition");
(PSL_ABORT, "psl_abort");
(PSL_ALWAYS, "psl_always");
(PSL_ASSERT, "psl_assert");
(PSL_ASSUME_GUARANTEE, "psl_assume_guarantee");
(PSL_BEFORE, "psl_before");
(PSL_BEFORE_, "psl_before_");
(PSL_BEFORE_PLING, "psl_before_pling");
(PSL_BOOLEAN, "psl_boolean");
(PSL_CLOCK, "psl_clock");
(PSL_CONST, "psl_const");
(PSL_COVER, "psl_cover");
(PSL_DEFAULT, "psl_default");
(PSL_ENDPOINT, "psl_endpoint");
(PSL_EVENTUALLY_PLING, "psl_eventually_pling");
(PSL_FAIRNESS, "psl_fairness");
(PSL_FELL, "psl_fell");
(PSL_FOR, "psl_for");
(PSL_FORALL, "psl_forall");
(PSL_IF, "psl_if");
(PSL_IN, "psl_in");
(PSL_INF, "psl_inf");
(PSL_INHERIT, "psl_inherit");
(PSL_NEVER, "psl_never");
(PSL_NEXT, "psl_next");
(PSL_NEXT_A, "psl_next_a");
(PSL_NEXT_A_PLING, "psl_next_a_pling");
(PSL_NEXT_E, "psl_next_e");
(PSL_NEXT_EVENT, "psl_next_event");
(PSL_NEXT_EVENT_A, "psl_next_event_a");
(PSL_NEXT_EVENT_A_PLING, "psl_next_event_a_pling");
(PSL_NEXT_EVENT_E, "psl_next_event_e");
(PSL_NEXT_EVENT_E_PLING, "psl_next_event_e_pling");
(PSL_NEXT_EVENT_PLING, "psl_next_event_pling");
(PSL_NEXT_E_PLING, "psl_next_e_pling");
(PSL_NEXT_PLING, "psl_next_pling");
(PSL_PREV, "psl_prev");
(PSL_PROPERTY, "psl_property");
(PSL_REPORT, "psl_report");
(PSL_RESTRICT_GUARANTEE, "psl_restrict_guarantee");
(PSL_ROSE, "psl_rose");
(PSL_SEQUENCE, "psl_sequence");
(PSL_STABLE, "psl_stable");
(PSL_UNION, "psl_union");
(PSL_UNTIL, "psl_until");
(PSL_UNTIL_, "psl_until_");
(PSL_VMODE, "psl_vmode");
(PSL_VPROP, "psl_vprop");
(PSL_VUNIT, "psl_vunit");
(PSL_WITHIN, "psl_within");
(PULSESTYLE_ONDETECT, "pulsestyle_ondetect");
(PULSESTYLE_ONEVENT, "pulsestyle_onevent");
(P_AMPERSAND, "p_ampersand");
(P_ANDAND, "p_andand");
(P_ANDANDAND, "p_andandand");
(P_ANDEQ, "p_andeq");
(P_ASTGT, "p_astgt");
(P_ATAT, "p_atat");
(P_CARET, "p_caret");
(P_CASEEQUAL, "p_caseequal");
(P_CASENOTEQUAL, "p_casenotequal");
(P_CELLDEFINE, "p_celldefine");
(P_COLONCOLON, "p_coloncolon");
(P_COLONDIV, "p_colondiv");
(P_COLONEQ, "p_coloneq");
(P_DEFINE, "p_define");
(P_DELAY_MODE_PATH, "p_delay_mode_path");
(P_DISABLE_PORTFAULTS, "p_disable_portfaults");
(P_DIVEQ, "p_diveq");
(P_DOTSTAR, "p_dotstar");
(P_ELSE, "p_else");
(P_ENABLE_PORTFAULTS, "p_enable_portfaults");
(P_ENDCELLDEFINE, "p_endcelldefine");
(P_ENDIF, "p_endif");
(P_ENDPROTECT, "p_endprotect");
(P_EQGT, "p_eqgt");
(P_EQUAL, "p_equal");
(P_GTE, "p_gte");
(P_IFDEF, "p_ifdef");
(P_IFNDEF, "p_ifndef");
(P_LTE, "p_lte");
(P_MINUSCOLON, "p_minuscolon");
(P_MINUSEQ, "p_minuseq");
(P_MINUSGT, "p_minusgt");
(P_MODEQ, "p_modeq");
(P_NAND, "p_nand");
(P_NOR, "p_nor");
(P_NOSUPPRESS_FAULTS, "p_nosuppress_faults");
(P_NOTEQUAL, "p_notequal");
(P_NXOR, "p_nxor");
(P_OREQ, "p_oreq");
(P_OREQGT, "p_oreqgt");
(P_ORMINUSGT, "p_orminusgt");
(P_OROR, "p_oror");
(P_PLUSCOLON, "p_pluscolon");
(P_PLUSEQ, "p_pluseq");
(P_POUNDPOUND, "p_poundpound");
(P_POW, "p_pow");
(P_PROTECT, "p_protect");
(P_RESETALL, "p_resetall");
(P_SLEFT, "p_sleft");
(P_SLEFTEQ, "p_slefteq");
(P_SRIGHT, "p_sright");
(P_SRIGHTEQ, "p_srighteq");
(P_SSRIGHT, "p_ssright");
(P_SSRIGHTEQ, "p_ssrighteq");
(P_SUPPRESS_FAULTS, "p_suppress_faults");
(P_TILDE, "p_tilde");
(P_TILDE_VBAR, "p_tilde_vbar");
(P_TIMESEQ, "p_timeseq");
(P_TRUE, "p_true");
(P_VBAR, "p_vbar");
(P_WILDEQUAL, "p_wildequal");
(P_WILDNOTEQUAL, "p_wildnotequal");
(P_XNOR, "p_xnor");
(P_XOREQ, "p_xoreq");
(QUERY, "query");
(RBRACK, "rbrack");
(RCURLY, "rcurly");
(RECEIVER, "receiver");
(RELATION, "relation");
(RPAREN, "rparen");
(SCALAR, "scalar");
(SCALARED, "scalared");
(SDIV, "sdiv");
(SEMICOLON, "semicolon");
(SENSUSED, "sensused");
(SHOWCANCELLED, "showcancelled");
(SIGN_EXT, "sign_ext");
(SMOD, "smod");
(SPECIAL, "special");
(SREM, "srem");
(SUBCCT, "subcct");
(SUBMODULE, "submodule");
(TASKREF, "taskref");
(TASKUSED, "taskused");
(TIMES, "times");
(TOKEN_EDGE01, "token_edge01");
(TOKEN_EDGE_10, "token_edge_10");
(TOKEN_ONE, "token_one");
(TOKEN_ZERO, "token_zero");
(UNKNOWN, "unknown");
(VOID, "void");
(WILDEQUAL, "wildequal");
];;
    
