#print_length 1000000
#print_depth 1000000

open Vabstraction
open VhdlTree
open VhdlMain
open Rewrite

(*
let srclst = [
"miim_control.vhd";
"miim_registers.vhd";
"miim_types.vhd";
"miim.vhd";
];;
*)

let srclst = [
"apb_uart.vhd";
"slib_clock_div.vhd";
"slib_counter.vhd";
"slib_edge_detect.vhd";
"slib_fifo.vhd";
"slib_input_filter.vhd";
"slib_input_sync.vhd";
"slib_mv_filter.vhd";
"uart_baudgen.vhd";
"uart_interrupt.vhd";
"uart_receiver.vhd";
"uart_transmitter.vhd";
];;

let lst = ref [];;

let convert srclst =
    let succ = ref true in
    main succ srclst;
    lst := [];
    Hashtbl.iter (fun (k,_) _ ->
        lst := abstraction(abstraction k) :: !lst) vhdlhash;
    dump !lst;;

let rslt = convert srclst;;
